{"version":3,"file":"BDatePicker.stories-1bc5ecab.js","sources":["../../src/vendor/imask-6.4.3.js","../../src/components/BDatePicker.vue"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? factory(exports)\n    : typeof define === 'function' && define.amd\n    ? define(['exports'], factory)\n    : ((global =\n        typeof globalThis !== 'undefined' ? globalThis : global || self),\n      factory((global.IMask = {})));\n})(this, function (exports) {\n  'use strict';\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n\n  /**\n   * Applies mask on element.\n   * @constructor\n   * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n   * @param {Object} opts - Custom mask options\n   * @return {InputMask}\n   */\n  function IMask(el) {\n    let opts =\n      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // currently available only for input-like elements\n    return new IMask.InputMask(el, opts);\n  }\n\n  /**\n    Provides details of changing model value\n    @param {Object} [details]\n    @param {string} [details.inserted] - Inserted symbols\n    @param {boolean} [details.skip] - Can skip chars\n    @param {number} [details.removeCount] - Removed symbols count\n    @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n  */\n  class ChangeDetails {\n    /** Inserted symbols */\n\n    /** Can skip chars */\n\n    /** Additional offset if any changes occurred before tail */\n\n    /** Raw inserted is used by dynamic mask */\n\n    constructor(details) {\n      Object.assign(\n        this,\n        {\n          inserted: '',\n          rawInserted: '',\n          skip: false,\n          tailShift: 0,\n        },\n        details\n      );\n    }\n\n    /**\n      Aggregate changes\n      @returns {ChangeDetails} `this`\n    */\n    aggregate(details) {\n      this.rawInserted += details.rawInserted;\n      this.skip = this.skip || details.skip;\n      this.inserted += details.inserted;\n      this.tailShift += details.tailShift;\n      return this;\n    }\n\n    /** Total offset considering all changes */\n    get offset() {\n      return this.tailShift + this.inserted.length;\n    }\n  }\n  IMask.ChangeDetails = ChangeDetails;\n\n  /** Checks if value is string */\n  function isString(str) {\n    return typeof str === 'string' || str instanceof String;\n  }\n\n  /**\n    Direction\n    @prop {string} NONE\n    @prop {string} LEFT\n    @prop {string} FORCE_LEFT\n    @prop {string} RIGHT\n    @prop {string} FORCE_RIGHT\n  */\n  const DIRECTION = {\n    NONE: 'NONE',\n    LEFT: 'LEFT',\n    FORCE_LEFT: 'FORCE_LEFT',\n    RIGHT: 'RIGHT',\n    FORCE_RIGHT: 'FORCE_RIGHT',\n  };\n\n  /** */\n  function forceDirection(direction) {\n    switch (direction) {\n      case DIRECTION.LEFT:\n        return DIRECTION.FORCE_LEFT;\n      case DIRECTION.RIGHT:\n        return DIRECTION.FORCE_RIGHT;\n      default:\n        return direction;\n    }\n  }\n\n  /** Escapes regular expression control chars */\n  function escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n  function normalizePrepare(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n\n  // cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\n  function objectIncludes(b, a) {\n    if (a === b) return true;\n    var arrA = Array.isArray(a),\n      arrB = Array.isArray(b),\n      i;\n    if (arrA && arrB) {\n      if (a.length != b.length) return false;\n      for (i = 0; i < a.length; i++)\n        if (!objectIncludes(a[i], b[i])) return false;\n      return true;\n    }\n    if (arrA != arrB) return false;\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n      var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n      if (dateA && dateB) return a.getTime() == b.getTime();\n      if (dateA != dateB) return false;\n      var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n      if (regexpA && regexpB) return a.toString() == b.toString();\n      if (regexpA != regexpB) return false;\n      var keys = Object.keys(a);\n      // if (keys.length !== Object.keys(b).length) return false;\n\n      for (i = 0; i < keys.length; i++)\n        // $FlowFixMe ... ???\n        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n      for (i = 0; i < keys.length; i++)\n        if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n      return true;\n    } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString();\n    }\n    return false;\n  }\n\n  /** Selection range */\n\n  /** Provides details of changing input */\n  class ActionDetails {\n    /** Current input value */\n\n    /** Current cursor position */\n\n    /** Old input value */\n\n    /** Old selection */\n\n    constructor(value, cursorPos, oldValue, oldSelection) {\n      this.value = value;\n      this.cursorPos = cursorPos;\n      this.oldValue = oldValue;\n      this.oldSelection = oldSelection;\n\n      // double check if left part was changed (autofilling, other non-standard input triggers)\n      while (\n        this.value.slice(0, this.startChangePos) !==\n        this.oldValue.slice(0, this.startChangePos)\n      ) {\n        --this.oldSelection.start;\n      }\n    }\n\n    /**\n      Start changing position\n      @readonly\n    */\n    get startChangePos() {\n      return Math.min(this.cursorPos, this.oldSelection.start);\n    }\n\n    /**\n      Inserted symbols count\n      @readonly\n    */\n    get insertedCount() {\n      return this.cursorPos - this.startChangePos;\n    }\n\n    /**\n      Inserted symbols\n      @readonly\n    */\n    get inserted() {\n      return this.value.substr(this.startChangePos, this.insertedCount);\n    }\n\n    /**\n      Removed symbols count\n      @readonly\n    */\n    get removedCount() {\n      // Math.max for opposite operation\n      return Math.max(\n        this.oldSelection.end - this.startChangePos ||\n          // for Delete\n          this.oldValue.length - this.value.length,\n        0\n      );\n    }\n\n    /**\n      Removed symbols\n      @readonly\n    */\n    get removed() {\n      return this.oldValue.substr(this.startChangePos, this.removedCount);\n    }\n\n    /**\n      Unchanged head symbols\n      @readonly\n    */\n    get head() {\n      return this.value.substring(0, this.startChangePos);\n    }\n\n    /**\n      Unchanged tail symbols\n      @readonly\n    */\n    get tail() {\n      return this.value.substring(this.startChangePos + this.insertedCount);\n    }\n\n    /**\n      Remove direction\n      @readonly\n    */\n    get removeDirection() {\n      if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n      // align right if delete at right\n      return (this.oldSelection.end === this.cursorPos ||\n        this.oldSelection.start === this.cursorPos) &&\n        // if not range removed (event with backspace)\n        this.oldSelection.end === this.oldSelection.start\n        ? DIRECTION.RIGHT\n        : DIRECTION.LEFT;\n    }\n  }\n\n  /** Provides details of continuous extracted tail */\n  class ContinuousTailDetails {\n    /** Tail value as string */\n\n    /** Tail start position */\n\n    /** Start position */\n\n    constructor() {\n      let value =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let from =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      let stop = arguments.length > 2 ? arguments[2] : undefined;\n      this.value = value;\n      this.from = from;\n      this.stop = stop;\n    }\n    toString() {\n      return this.value;\n    }\n    extend(tail) {\n      this.value += String(tail);\n    }\n    appendTo(masked) {\n      return masked\n        .append(this.toString(), {\n          tail: true,\n        })\n        .aggregate(masked._appendPlaceholder());\n    }\n    get state() {\n      return {\n        value: this.value,\n        from: this.from,\n        stop: this.stop,\n      };\n    }\n    set state(state) {\n      Object.assign(this, state);\n    }\n    unshift(beforePos) {\n      if (!this.value.length || (beforePos != null && this.from >= beforePos))\n        return '';\n      const shiftChar = this.value[0];\n      this.value = this.value.slice(1);\n      return shiftChar;\n    }\n    shift() {\n      if (!this.value.length) return '';\n      const shiftChar = this.value[this.value.length - 1];\n      this.value = this.value.slice(0, -1);\n      return shiftChar;\n    }\n  }\n\n  /** Supported mask type */\n\n  /** Append flags */\n\n  /** Extract flags */\n\n  /** Provides common masking stuff */\n  class Masked {\n    // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n\n    /** @type {Mask} */\n\n    /** */ // $FlowFixMe no ideas\n    /** Transforms value before mask processing */\n    /** Validates if value is acceptable */\n    /** Does additional processing in the end of editing */\n    /** Format typed value to string */\n    /** Parse strgin to get typed value */\n    /** Enable characters overwriting */\n    /** */\n    /** */\n    /** */\n    constructor(opts) {\n      this._value = '';\n      this._update(Object.assign({}, Masked.DEFAULTS, opts));\n      this.isInitialized = true;\n    }\n\n    /** Sets and applies new options */\n    updateOptions(opts) {\n      if (!Object.keys(opts).length) return;\n      // $FlowFixMe\n      this.withValueRefresh(this._update.bind(this, opts));\n    }\n\n    /**\n      Sets new options\n      @protected\n    */\n    _update(opts) {\n      Object.assign(this, opts);\n    }\n\n    /** Mask state */\n    get state() {\n      return {\n        _value: this.value,\n      };\n    }\n    set state(state) {\n      this._value = state._value;\n    }\n\n    /** Resets value */\n    reset() {\n      this._value = '';\n    }\n\n    /** */\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      this.resolve(value);\n    }\n\n    /** Resolve new value */\n    resolve(value) {\n      this.reset();\n      this.append(\n        value,\n        {\n          input: true,\n        },\n        ''\n      );\n      this.doCommit();\n      return this.value;\n    }\n\n    /** */\n    get unmaskedValue() {\n      return this.value;\n    }\n    set unmaskedValue(value) {\n      this.reset();\n      this.append(value, {}, '');\n      this.doCommit();\n    }\n\n    /** */\n    get typedValue() {\n      return this.doParse(this.value);\n    }\n    set typedValue(value) {\n      this.value = this.doFormat(value);\n    }\n\n    /** Value that includes raw user input */\n    get rawInputValue() {\n      return this.extractInput(0, this.value.length, {\n        raw: true,\n      });\n    }\n    set rawInputValue(value) {\n      this.reset();\n      this.append(\n        value,\n        {\n          raw: true,\n        },\n        ''\n      );\n      this.doCommit();\n    }\n    get displayValue() {\n      return this.value;\n    }\n\n    /** */\n    get isComplete() {\n      return true;\n    }\n\n    /** */\n    get isFilled() {\n      return this.isComplete;\n    }\n\n    /** Finds nearest input position in direction */\n    nearestInputPos(cursorPos, direction) {\n      return cursorPos;\n    }\n    totalInputPositions() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      return Math.min(this.value.length, toPos - fromPos);\n    }\n\n    /** Extracts value in range considering flags */\n    extractInput() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      return this.value.slice(fromPos, toPos);\n    }\n\n    /** Extracts tail in range */\n    extractTail() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      return new ContinuousTailDetails(\n        this.extractInput(fromPos, toPos),\n        fromPos\n      );\n    }\n\n    /** Appends tail */\n    // $FlowFixMe no ideas\n    appendTail(tail) {\n      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n      return tail.appendTo(this);\n    }\n\n    /** Appends char */\n    _appendCharRaw(ch) {\n      if (!ch) return new ChangeDetails();\n      this._value += ch;\n      return new ChangeDetails({\n        inserted: ch,\n        rawInserted: ch,\n      });\n    }\n\n    /** Appends char */\n    _appendChar(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let checkTail = arguments.length > 2 ? arguments[2] : undefined;\n      const consistentState = this.state;\n      let details;\n      [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n      if (details.inserted) {\n        let consistentTail;\n        let appended = this.doValidate(flags) !== false;\n        if (appended && checkTail != null) {\n          // validation ok, check tail\n          const beforeTailState = this.state;\n          if (this.overwrite === true) {\n            consistentTail = checkTail.state;\n            checkTail.unshift(this.value.length - details.tailShift);\n          }\n          let tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n\n          // not ok, try shift\n          if (\n            !(appended && tailDetails.inserted) &&\n            this.overwrite === 'shift'\n          ) {\n            this.state = beforeTailState;\n            consistentTail = checkTail.state;\n            checkTail.shift();\n            tailDetails = this.appendTail(checkTail);\n            appended = tailDetails.rawInserted === checkTail.toString();\n          }\n\n          // if ok, rollback state after tail\n          if (appended && tailDetails.inserted) this.state = beforeTailState;\n        }\n\n        // revert all if something went wrong\n        if (!appended) {\n          details = new ChangeDetails();\n          this.state = consistentState;\n          if (checkTail && consistentTail) checkTail.state = consistentTail;\n        }\n      }\n      return details;\n    }\n\n    /** Appends optional placeholder at end */\n    _appendPlaceholder() {\n      return new ChangeDetails();\n    }\n\n    /** Appends optional eager placeholder at end */\n    _appendEager() {\n      return new ChangeDetails();\n    }\n\n    /** Appends symbols considering flags */\n    // $FlowFixMe no ideas\n    append(str, flags, tail) {\n      if (!isString(str)) throw new Error('value should be string');\n      const details = new ChangeDetails();\n      const checkTail = isString(tail)\n        ? new ContinuousTailDetails(String(tail))\n        : tail;\n      if (flags !== null && flags !== void 0 && flags.tail)\n        flags._beforeTailState = this.state;\n      for (let ci = 0; ci < str.length; ++ci) {\n        const d = this._appendChar(str[ci], flags, checkTail);\n        if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail))\n          break;\n        details.aggregate(d);\n      }\n\n      // append tail but aggregate only tailShift\n      if (checkTail != null) {\n        details.tailShift += this.appendTail(checkTail).tailShift;\n        // TODO it's a good idea to clear state after appending ends\n        // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n        // this._resetBeforeTailState();\n      }\n\n      if (\n        (this.eager === true || this.eager === 'append') &&\n        flags !== null &&\n        flags !== void 0 &&\n        flags.input &&\n        str\n      ) {\n        details.aggregate(this._appendEager());\n      }\n      return details;\n    }\n\n    /** */\n    remove() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n      return new ChangeDetails();\n    }\n\n    /** Calls function and reapplies current value */\n    withValueRefresh(fn) {\n      if (this._refreshing || !this.isInitialized) return fn();\n      this._refreshing = true;\n      const rawInput = this.rawInputValue;\n      const value = this.value;\n      const ret = fn();\n      this.rawInputValue = rawInput;\n      // append lost trailing chars at end\n      if (\n        this.value &&\n        this.value !== value &&\n        value.indexOf(this.value) === 0\n      ) {\n        this.append(value.slice(this.value.length), {}, '');\n      }\n      delete this._refreshing;\n      return ret;\n    }\n\n    /** */\n    runIsolated(fn) {\n      if (this._isolated || !this.isInitialized) return fn(this);\n      this._isolated = true;\n      const state = this.state;\n      const ret = fn(this);\n      this.state = state;\n      delete this._isolated;\n      return ret;\n    }\n\n    /** */\n    doSkipInvalid(ch) {\n      return this.skipInvalid;\n    }\n\n    /**\n      Prepares string before mask processing\n      @protected\n    */\n    doPrepare(str) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.prepare ? this.prepare(str, this, flags) : str;\n    }\n\n    /**\n      Validates if value is acceptable\n      @protected\n    */\n    doValidate(flags) {\n      return (\n        (!this.validate || this.validate(this.value, this, flags)) &&\n        (!this.parent || this.parent.doValidate(flags))\n      );\n    }\n\n    /**\n      Does additional processing in the end of editing\n      @protected\n    */\n    doCommit() {\n      if (this.commit) this.commit(this.value, this);\n    }\n\n    /** */\n    doFormat(value) {\n      return this.format ? this.format(value, this) : value;\n    }\n\n    /** */\n    doParse(str) {\n      return this.parse ? this.parse(str, this) : str;\n    }\n\n    /** */\n    splice(start, deleteCount, inserted, removeDirection) {\n      let flags =\n        arguments.length > 4 && arguments[4] !== undefined\n          ? arguments[4]\n          : {\n              input: true,\n            };\n      const tailPos = start + deleteCount;\n      const tail = this.extractTail(tailPos);\n      const eagerRemove = this.eager === true || this.eager === 'remove';\n      let oldRawValue;\n      if (eagerRemove) {\n        removeDirection = forceDirection(removeDirection);\n        oldRawValue = this.extractInput(0, tailPos, {\n          raw: true,\n        });\n      }\n      let startChangePos = start;\n      const details = new ChangeDetails();\n\n      // if it is just deletion without insertion\n      if (removeDirection !== DIRECTION.NONE) {\n        startChangePos = this.nearestInputPos(\n          start,\n          deleteCount > 1 && start !== 0 && !eagerRemove\n            ? DIRECTION.NONE\n            : removeDirection\n        );\n\n        // adjust tailShift if start was aligned\n        details.tailShift = startChangePos - start;\n      }\n      details.aggregate(this.remove(startChangePos));\n      if (\n        eagerRemove &&\n        removeDirection !== DIRECTION.NONE &&\n        oldRawValue === this.rawInputValue\n      ) {\n        if (removeDirection === DIRECTION.FORCE_LEFT) {\n          let valLength;\n          while (\n            oldRawValue === this.rawInputValue &&\n            (valLength = this.value.length)\n          ) {\n            details\n              .aggregate(\n                new ChangeDetails({\n                  tailShift: -1,\n                })\n              )\n              .aggregate(this.remove(valLength - 1));\n          }\n        } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n          tail.unshift();\n        }\n      }\n      return details.aggregate(this.append(inserted, flags, tail));\n    }\n    maskEquals(mask) {\n      return this.mask === mask;\n    }\n    typedValueEquals(value) {\n      const tval = this.typedValue;\n      return (\n        value === tval ||\n        (Masked.EMPTY_VALUES.includes(value) &&\n          Masked.EMPTY_VALUES.includes(tval)) ||\n        this.doFormat(value) === this.doFormat(this.typedValue)\n      );\n    }\n  }\n  Masked.DEFAULTS = {\n    format: String,\n    parse: (v) => v,\n    skipInvalid: true,\n  };\n  Masked.EMPTY_VALUES = [undefined, null, ''];\n  IMask.Masked = Masked;\n\n  /** Get Masked class by mask type */\n  function maskedClass(mask) {\n    if (mask == null) {\n      throw new Error('mask property should be defined');\n    }\n\n    // $FlowFixMe\n    if (mask instanceof RegExp) return IMask.MaskedRegExp;\n    // $FlowFixMe\n    if (isString(mask)) return IMask.MaskedPattern;\n    // $FlowFixMe\n    if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n    // $FlowFixMe\n    if (mask instanceof Number || typeof mask === 'number' || mask === Number)\n      return IMask.MaskedNumber;\n    // $FlowFixMe\n    if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n    // $FlowFixMe\n    if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n    // $FlowFixMe\n    if (mask instanceof IMask.Masked) return mask.constructor;\n    // $FlowFixMe\n    if (mask instanceof Function) return IMask.MaskedFunction;\n    console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n    // $FlowFixMe\n    return IMask.Masked;\n  }\n\n  /** Creates new {@link Masked} depending on mask type */\n  function createMask(opts) {\n    // $FlowFixMe\n    if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n    opts = Object.assign({}, opts);\n    const mask = opts.mask;\n\n    // $FlowFixMe\n    if (IMask.Masked && mask instanceof IMask.Masked) return mask;\n    const MaskedClass = maskedClass(mask);\n    if (!MaskedClass)\n      throw new Error(\n        'Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.'\n      );\n    return new MaskedClass(opts);\n  }\n  IMask.createMask = createMask;\n\n  const _excluded$4 = [\n    'parent',\n    'isOptional',\n    'placeholderChar',\n    'displayChar',\n    'lazy',\n    'eager',\n  ];\n\n  /** */\n\n  const DEFAULT_INPUT_DEFINITIONS = {\n    0: /\\d/,\n    a: /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    // http://stackoverflow.com/a/22075070\n    '*': /./,\n  };\n\n  /** */\n  class PatternInputDefinition {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    constructor(opts) {\n      const { parent, isOptional, placeholderChar, displayChar, lazy, eager } =\n          opts,\n        maskOpts = _objectWithoutPropertiesLoose(opts, _excluded$4);\n      this.masked = createMask(maskOpts);\n      Object.assign(this, {\n        parent,\n        isOptional,\n        placeholderChar,\n        displayChar,\n        lazy,\n        eager,\n      });\n    }\n    reset() {\n      this.isFilled = false;\n      this.masked.reset();\n    }\n    remove() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      if (fromPos === 0 && toPos >= 1) {\n        this.isFilled = false;\n        return this.masked.remove(fromPos, toPos);\n      }\n      return new ChangeDetails();\n    }\n    get value() {\n      return (\n        this.masked.value ||\n        (this.isFilled && !this.isOptional ? this.placeholderChar : '')\n      );\n    }\n    get unmaskedValue() {\n      return this.masked.unmaskedValue;\n    }\n    get displayValue() {\n      return (this.masked.value && this.displayChar) || this.value;\n    }\n    get isComplete() {\n      return Boolean(this.masked.value) || this.isOptional;\n    }\n    _appendChar(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (this.isFilled) return new ChangeDetails();\n      const state = this.masked.state;\n      // simulate input\n      const details = this.masked._appendChar(ch, flags);\n      if (details.inserted && this.doValidate(flags) === false) {\n        details.inserted = details.rawInserted = '';\n        this.masked.state = state;\n      }\n      if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n        details.inserted = this.placeholderChar;\n      }\n      details.skip = !details.inserted && !this.isOptional;\n      this.isFilled = Boolean(details.inserted);\n      return details;\n    }\n    append() {\n      // TODO probably should be done via _appendChar\n      return this.masked.append(...arguments);\n    }\n    _appendPlaceholder() {\n      const details = new ChangeDetails();\n      if (this.isFilled || this.isOptional) return details;\n      this.isFilled = true;\n      details.inserted = this.placeholderChar;\n      return details;\n    }\n    _appendEager() {\n      return new ChangeDetails();\n    }\n    extractTail() {\n      return this.masked.extractTail(...arguments);\n    }\n    appendTail() {\n      return this.masked.appendTail(...arguments);\n    }\n    extractInput() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      let flags = arguments.length > 2 ? arguments[2] : undefined;\n      return this.masked.extractInput(fromPos, toPos, flags);\n    }\n    nearestInputPos(cursorPos) {\n      let direction =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : DIRECTION.NONE;\n      const minPos = 0;\n      const maxPos = this.value.length;\n      const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n      switch (direction) {\n        case DIRECTION.LEFT:\n        case DIRECTION.FORCE_LEFT:\n          return this.isComplete ? boundPos : minPos;\n        case DIRECTION.RIGHT:\n        case DIRECTION.FORCE_RIGHT:\n          return this.isComplete ? boundPos : maxPos;\n        case DIRECTION.NONE:\n        default:\n          return boundPos;\n      }\n    }\n    totalInputPositions() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      return this.value.slice(fromPos, toPos).length;\n    }\n    doValidate() {\n      return (\n        this.masked.doValidate(...arguments) &&\n        (!this.parent || this.parent.doValidate(...arguments))\n      );\n    }\n    doCommit() {\n      this.masked.doCommit();\n    }\n    get state() {\n      return {\n        masked: this.masked.state,\n        isFilled: this.isFilled,\n      };\n    }\n    set state(state) {\n      this.masked.state = state.masked;\n      this.isFilled = state.isFilled;\n    }\n  }\n\n  /** */\n\n  class PatternFixedDefinition {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    constructor(opts) {\n      Object.assign(this, opts);\n      this._value = '';\n      this.isFixed = true;\n    }\n    get value() {\n      return this._value;\n    }\n    get unmaskedValue() {\n      return this.isUnmasking ? this.value : '';\n    }\n    get displayValue() {\n      return this.value;\n    }\n    reset() {\n      this._isRawInput = false;\n      this._value = '';\n    }\n    remove() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this._value.length;\n      this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n      if (!this._value) this._isRawInput = false;\n      return new ChangeDetails();\n    }\n    nearestInputPos(cursorPos) {\n      let direction =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : DIRECTION.NONE;\n      const minPos = 0;\n      const maxPos = this._value.length;\n      switch (direction) {\n        case DIRECTION.LEFT:\n        case DIRECTION.FORCE_LEFT:\n          return minPos;\n        case DIRECTION.NONE:\n        case DIRECTION.RIGHT:\n        case DIRECTION.FORCE_RIGHT:\n        default:\n          return maxPos;\n      }\n    }\n    totalInputPositions() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this._value.length;\n      return this._isRawInput ? toPos - fromPos : 0;\n    }\n    extractInput() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this._value.length;\n      let flags =\n        arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return (\n        (flags.raw && this._isRawInput && this._value.slice(fromPos, toPos)) ||\n        ''\n      );\n    }\n    get isComplete() {\n      return true;\n    }\n    get isFilled() {\n      return Boolean(this._value);\n    }\n    _appendChar(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const details = new ChangeDetails();\n      if (this.isFilled) return details;\n      const appendEager = this.eager === true || this.eager === 'append';\n      const appended = this.char === ch;\n      const isResolved =\n        appended &&\n        (this.isUnmasking || flags.input || flags.raw) &&\n        (!flags.raw || !appendEager) &&\n        !flags.tail;\n      if (isResolved) details.rawInserted = this.char;\n      this._value = details.inserted = this.char;\n      this._isRawInput = isResolved && (flags.raw || flags.input);\n      return details;\n    }\n    _appendEager() {\n      return this._appendChar(this.char, {\n        tail: true,\n      });\n    }\n    _appendPlaceholder() {\n      const details = new ChangeDetails();\n      if (this.isFilled) return details;\n      this._value = details.inserted = this.char;\n      return details;\n    }\n    extractTail() {\n      arguments.length > 1 && arguments[1] !== undefined\n        ? arguments[1]\n        : this.value.length;\n      return new ContinuousTailDetails('');\n    }\n\n    // $FlowFixMe no ideas\n    appendTail(tail) {\n      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n      return tail.appendTo(this);\n    }\n    append(str, flags, tail) {\n      const details = this._appendChar(str[0], flags);\n      if (tail != null) {\n        details.tailShift += this.appendTail(tail).tailShift;\n      }\n      return details;\n    }\n    doCommit() {}\n    get state() {\n      return {\n        _value: this._value,\n        _isRawInput: this._isRawInput,\n      };\n    }\n    set state(state) {\n      Object.assign(this, state);\n    }\n  }\n\n  const _excluded$3 = ['chunks'];\n  class ChunksTailDetails {\n    /** */\n\n    constructor() {\n      let chunks =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      let from =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.chunks = chunks;\n      this.from = from;\n    }\n    toString() {\n      return this.chunks.map(String).join('');\n    }\n\n    // $FlowFixMe no ideas\n    extend(tailChunk) {\n      if (!String(tailChunk)) return;\n      if (isString(tailChunk))\n        tailChunk = new ContinuousTailDetails(String(tailChunk));\n      const lastChunk = this.chunks[this.chunks.length - 1];\n      const extendLast =\n        lastChunk &&\n        // if stops are same or tail has no stop\n        (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n        // if tail chunk goes just after last chunk\n        tailChunk.from === lastChunk.from + lastChunk.toString().length;\n      if (tailChunk instanceof ContinuousTailDetails) {\n        // check the ability to extend previous chunk\n        if (extendLast) {\n          // extend previous chunk\n          lastChunk.extend(tailChunk.toString());\n        } else {\n          // append new chunk\n          this.chunks.push(tailChunk);\n        }\n      } else if (tailChunk instanceof ChunksTailDetails) {\n        if (tailChunk.stop == null) {\n          // unwrap floating chunks to parent, keeping `from` pos\n          let firstTailChunk;\n          while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n            firstTailChunk = tailChunk.chunks.shift();\n            firstTailChunk.from += tailChunk.from;\n            this.extend(firstTailChunk);\n          }\n        }\n\n        // if tail chunk still has value\n        if (tailChunk.toString()) {\n          // if chunks contains stops, then popup stop to container\n          tailChunk.stop = tailChunk.blockIndex;\n          this.chunks.push(tailChunk);\n        }\n      }\n    }\n    appendTo(masked) {\n      // $FlowFixMe\n      if (!(masked instanceof IMask.MaskedPattern)) {\n        const tail = new ContinuousTailDetails(this.toString());\n        return tail.appendTo(masked);\n      }\n      const details = new ChangeDetails();\n      for (let ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\n        const chunk = this.chunks[ci];\n        const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n        const stop = chunk.stop;\n        let chunkBlock;\n        if (\n          stop != null &&\n          // if block not found or stop is behind lastBlock\n          (!lastBlockIter || lastBlockIter.index <= stop)\n        ) {\n          if (\n            chunk instanceof ChunksTailDetails ||\n            // for continuous block also check if stop is exist\n            masked._stops.indexOf(stop) >= 0\n          ) {\n            const phDetails = masked._appendPlaceholder(stop);\n            details.aggregate(phDetails);\n          }\n          chunkBlock =\n            chunk instanceof ChunksTailDetails && masked._blocks[stop];\n        }\n        if (chunkBlock) {\n          const tailDetails = chunkBlock.appendTail(chunk);\n          tailDetails.skip = false; // always ignore skip, it will be set on last\n          details.aggregate(tailDetails);\n          masked._value += tailDetails.inserted;\n\n          // get not inserted chars\n          const remainChars = chunk\n            .toString()\n            .slice(tailDetails.rawInserted.length);\n          if (remainChars)\n            details.aggregate(\n              masked.append(remainChars, {\n                tail: true,\n              })\n            );\n        } else {\n          details.aggregate(\n            masked.append(chunk.toString(), {\n              tail: true,\n            })\n          );\n        }\n      }\n      return details;\n    }\n    get state() {\n      return {\n        chunks: this.chunks.map((c) => c.state),\n        from: this.from,\n        stop: this.stop,\n        blockIndex: this.blockIndex,\n      };\n    }\n    set state(state) {\n      const { chunks } = state,\n        props = _objectWithoutPropertiesLoose(state, _excluded$3);\n      Object.assign(this, props);\n      this.chunks = chunks.map((cstate) => {\n        const chunk =\n          'chunks' in cstate\n            ? new ChunksTailDetails()\n            : new ContinuousTailDetails();\n        // $FlowFixMe already checked above\n        chunk.state = cstate;\n        return chunk;\n      });\n    }\n    unshift(beforePos) {\n      if (!this.chunks.length || (beforePos != null && this.from >= beforePos))\n        return '';\n      const chunkShiftPos =\n        beforePos != null ? beforePos - this.from : beforePos;\n      let ci = 0;\n      while (ci < this.chunks.length) {\n        const chunk = this.chunks[ci];\n        const shiftChar = chunk.unshift(chunkShiftPos);\n        if (chunk.toString()) {\n          // chunk still contains value\n          // but not shifted - means no more available chars to shift\n          if (!shiftChar) break;\n          ++ci;\n        } else {\n          // clean if chunk has no value\n          this.chunks.splice(ci, 1);\n        }\n        if (shiftChar) return shiftChar;\n      }\n      return '';\n    }\n    shift() {\n      if (!this.chunks.length) return '';\n      let ci = this.chunks.length - 1;\n      while (0 <= ci) {\n        const chunk = this.chunks[ci];\n        const shiftChar = chunk.shift();\n        if (chunk.toString()) {\n          // chunk still contains value\n          // but not shifted - means no more available chars to shift\n          if (!shiftChar) break;\n          --ci;\n        } else {\n          // clean if chunk has no value\n          this.chunks.splice(ci, 1);\n        }\n        if (shiftChar) return shiftChar;\n      }\n      return '';\n    }\n  }\n\n  class PatternCursor {\n    constructor(masked, pos) {\n      this.masked = masked;\n      this._log = [];\n      const { offset, index } =\n        masked._mapPosToBlock(pos) ||\n        (pos < 0\n          ? // first\n            {\n              index: 0,\n              offset: 0,\n            }\n          : // last\n            {\n              index: this.masked._blocks.length,\n              offset: 0,\n            });\n      this.offset = offset;\n      this.index = index;\n      this.ok = false;\n    }\n    get block() {\n      return this.masked._blocks[this.index];\n    }\n    get pos() {\n      return this.masked._blockStartPos(this.index) + this.offset;\n    }\n    get state() {\n      return {\n        index: this.index,\n        offset: this.offset,\n        ok: this.ok,\n      };\n    }\n    set state(s) {\n      Object.assign(this, s);\n    }\n    pushState() {\n      this._log.push(this.state);\n    }\n    popState() {\n      const s = this._log.pop();\n      this.state = s;\n      return s;\n    }\n    bindBlock() {\n      if (this.block) return;\n      if (this.index < 0) {\n        this.index = 0;\n        this.offset = 0;\n      }\n      if (this.index >= this.masked._blocks.length) {\n        this.index = this.masked._blocks.length - 1;\n        this.offset = this.block.value.length;\n      }\n    }\n    _pushLeft(fn) {\n      this.pushState();\n      for (\n        this.bindBlock();\n        0 <= this.index;\n        --this.index,\n          this.offset =\n            ((_this$block = this.block) === null || _this$block === void 0\n              ? void 0\n              : _this$block.value.length) || 0\n      ) {\n        var _this$block;\n        if (fn()) return (this.ok = true);\n      }\n      return (this.ok = false);\n    }\n    _pushRight(fn) {\n      this.pushState();\n      for (\n        this.bindBlock();\n        this.index < this.masked._blocks.length;\n        ++this.index, this.offset = 0\n      ) {\n        if (fn()) return (this.ok = true);\n      }\n      return (this.ok = false);\n    }\n    pushLeftBeforeFilled() {\n      return this._pushLeft(() => {\n        if (this.block.isFixed || !this.block.value) return;\n        this.offset = this.block.nearestInputPos(\n          this.offset,\n          DIRECTION.FORCE_LEFT\n        );\n        if (this.offset !== 0) return true;\n      });\n    }\n    pushLeftBeforeInput() {\n      // cases:\n      // filled input: 00|\n      // optional empty input: 00[]|\n      // nested block: XX<[]>|\n      return this._pushLeft(() => {\n        if (this.block.isFixed) return;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n        return true;\n      });\n    }\n    pushLeftBeforeRequired() {\n      return this._pushLeft(() => {\n        if (this.block.isFixed || (this.block.isOptional && !this.block.value))\n          return;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n        return true;\n      });\n    }\n    pushRightBeforeFilled() {\n      return this._pushRight(() => {\n        if (this.block.isFixed || !this.block.value) return;\n        this.offset = this.block.nearestInputPos(\n          this.offset,\n          DIRECTION.FORCE_RIGHT\n        );\n        if (this.offset !== this.block.value.length) return true;\n      });\n    }\n    pushRightBeforeInput() {\n      return this._pushRight(() => {\n        if (this.block.isFixed) return;\n\n        // const o = this.offset;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n        // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n        // aa|X\n        // aa<X|[]>X_    - this will not work\n        // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n        return true;\n      });\n    }\n    pushRightBeforeRequired() {\n      return this._pushRight(() => {\n        if (this.block.isFixed || (this.block.isOptional && !this.block.value))\n          return;\n\n        // TODO check |[*]XX_\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n        return true;\n      });\n    }\n  }\n\n  /** Masking by RegExp */\n  class MaskedRegExp extends Masked {\n    /**\n      @override\n      @param {Object} opts\n    */\n    _update(opts) {\n      if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n      super._update(opts);\n    }\n  }\n  IMask.MaskedRegExp = MaskedRegExp;\n\n  const _excluded$2 = ['_blocks'];\n\n  /**\n    Pattern mask\n    @param {Object} opts\n    @param {Object} opts.blocks\n    @param {Object} opts.definitions\n    @param {string} opts.placeholderChar\n    @param {string} opts.displayChar\n    @param {boolean} opts.lazy\n  */\n  class MaskedPattern extends Masked {\n    /** */\n\n    /** */\n\n    /** Single char for empty input */\n\n    /** Single char for filled input */\n\n    /** Show placeholder only when needed */\n\n    constructor() {\n      let opts =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // TODO type $Shape<MaskedPatternOptions>={} does not work\n      opts.definitions = Object.assign(\n        {},\n        DEFAULT_INPUT_DEFINITIONS,\n        opts.definitions\n      );\n      super(Object.assign({}, MaskedPattern.DEFAULTS, opts));\n    }\n\n    /**\n      @override\n      @param {Object} opts\n    */\n    _update() {\n      let opts =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n      super._update(opts);\n      this._rebuildMask();\n    }\n\n    /** */\n    _rebuildMask() {\n      const defs = this.definitions;\n      this._blocks = [];\n      this._stops = [];\n      this._maskedBlocks = {};\n      let pattern = this.mask;\n      if (!pattern || !defs) return;\n      let unmaskingBlock = false;\n      let optionalBlock = false;\n      for (let i = 0; i < pattern.length; ++i) {\n        var _defs$char, _defs$char2;\n        if (this.blocks) {\n          const p = pattern.slice(i);\n          const bNames = Object.keys(this.blocks).filter(\n            (bName) => p.indexOf(bName) === 0\n          );\n          // order by key length\n          bNames.sort((a, b) => b.length - a.length);\n          // use block name with max length\n          const bName = bNames[0];\n          if (bName) {\n            // $FlowFixMe no ideas\n            const maskedBlock = createMask(\n              Object.assign(\n                {\n                  parent: this,\n                  lazy: this.lazy,\n                  eager: this.eager,\n                  placeholderChar: this.placeholderChar,\n                  displayChar: this.displayChar,\n                  overwrite: this.overwrite,\n                },\n                this.blocks[bName]\n              )\n            );\n            if (maskedBlock) {\n              this._blocks.push(maskedBlock);\n\n              // store block index\n              if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n              this._maskedBlocks[bName].push(this._blocks.length - 1);\n            }\n            i += bName.length - 1;\n            continue;\n          }\n        }\n        let char = pattern[i];\n        let isInput = char in defs;\n        if (char === MaskedPattern.STOP_CHAR) {\n          this._stops.push(this._blocks.length);\n          continue;\n        }\n        if (char === '{' || char === '}') {\n          unmaskingBlock = !unmaskingBlock;\n          continue;\n        }\n        if (char === '[' || char === ']') {\n          optionalBlock = !optionalBlock;\n          continue;\n        }\n        if (char === MaskedPattern.ESCAPE_CHAR) {\n          ++i;\n          char = pattern[i];\n          if (!char) break;\n          isInput = false;\n        }\n        const maskOpts =\n          (_defs$char = defs[char]) !== null &&\n          _defs$char !== void 0 &&\n          _defs$char.mask &&\n          !(\n            ((_defs$char2 = defs[char]) === null || _defs$char2 === void 0\n              ? void 0\n              : _defs$char2.mask.prototype) instanceof IMask.Masked\n          )\n            ? defs[char]\n            : {\n                mask: defs[char],\n              };\n        const def = isInput\n          ? new PatternInputDefinition(\n              Object.assign(\n                {\n                  parent: this,\n                  isOptional: optionalBlock,\n                  lazy: this.lazy,\n                  eager: this.eager,\n                  placeholderChar: this.placeholderChar,\n                  displayChar: this.displayChar,\n                },\n                maskOpts\n              )\n            )\n          : new PatternFixedDefinition({\n              char,\n              eager: this.eager,\n              isUnmasking: unmaskingBlock,\n            });\n        this._blocks.push(def);\n      }\n    }\n\n    /**\n      @override\n    */\n    get state() {\n      return Object.assign({}, super.state, {\n        _blocks: this._blocks.map((b) => b.state),\n      });\n    }\n    set state(state) {\n      const { _blocks } = state,\n        maskedState = _objectWithoutPropertiesLoose(state, _excluded$2);\n      this._blocks.forEach((b, bi) => (b.state = _blocks[bi]));\n      super.state = maskedState;\n    }\n\n    /**\n      @override\n    */\n    reset() {\n      super.reset();\n      this._blocks.forEach((b) => b.reset());\n    }\n\n    /**\n      @override\n    */\n    get isComplete() {\n      return this._blocks.every((b) => b.isComplete);\n    }\n\n    /**\n      @override\n    */\n    get isFilled() {\n      return this._blocks.every((b) => b.isFilled);\n    }\n    get isFixed() {\n      return this._blocks.every((b) => b.isFixed);\n    }\n    get isOptional() {\n      return this._blocks.every((b) => b.isOptional);\n    }\n\n    /**\n      @override\n    */\n    doCommit() {\n      this._blocks.forEach((b) => b.doCommit());\n      super.doCommit();\n    }\n\n    /**\n      @override\n    */\n    get unmaskedValue() {\n      return this._blocks.reduce((str, b) => (str += b.unmaskedValue), '');\n    }\n    set unmaskedValue(unmaskedValue) {\n      super.unmaskedValue = unmaskedValue;\n    }\n\n    /**\n      @override\n    */\n    get value() {\n      // TODO return _value when not in change?\n      return this._blocks.reduce((str, b) => (str += b.value), '');\n    }\n    set value(value) {\n      super.value = value;\n    }\n    get displayValue() {\n      return this._blocks.reduce((str, b) => (str += b.displayValue), '');\n    }\n\n    /**\n      @override\n    */\n    appendTail(tail) {\n      return super.appendTail(tail).aggregate(this._appendPlaceholder());\n    }\n\n    /**\n      @override\n    */\n    _appendEager() {\n      var _this$_mapPosToBlock;\n      const details = new ChangeDetails();\n      let startBlockIndex =\n        (_this$_mapPosToBlock = this._mapPosToBlock(this.value.length)) ===\n          null || _this$_mapPosToBlock === void 0\n          ? void 0\n          : _this$_mapPosToBlock.index;\n      if (startBlockIndex == null) return details;\n\n      // TODO test if it works for nested pattern masks\n      if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n      for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n        const d = this._blocks[bi]._appendEager();\n        if (!d.inserted) break;\n        details.aggregate(d);\n      }\n      return details;\n    }\n\n    /**\n      @override\n    */\n    _appendCharRaw(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const blockIter = this._mapPosToBlock(this.value.length);\n      const details = new ChangeDetails();\n      if (!blockIter) return details;\n      for (let bi = blockIter.index; ; ++bi) {\n        var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n        const block = this._blocks[bi];\n        if (!block) break;\n        const blockDetails = block._appendChar(\n          ch,\n          Object.assign({}, flags, {\n            _beforeTailState:\n              (_flags$_beforeTailSta = flags._beforeTailState) === null ||\n              _flags$_beforeTailSta === void 0\n                ? void 0\n                : (_flags$_beforeTailSta2 = _flags$_beforeTailSta._blocks) ===\n                    null || _flags$_beforeTailSta2 === void 0\n                ? void 0\n                : _flags$_beforeTailSta2[bi],\n          })\n        );\n        const skip = blockDetails.skip;\n        details.aggregate(blockDetails);\n        if (skip || blockDetails.rawInserted) break; // go next char\n      }\n\n      return details;\n    }\n\n    /**\n      @override\n    */\n    extractTail() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      const chunkTail = new ChunksTailDetails();\n      if (fromPos === toPos) return chunkTail;\n      this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n        const blockChunk = b.extractTail(bFromPos, bToPos);\n        blockChunk.stop = this._findStopBefore(bi);\n        blockChunk.from = this._blockStartPos(bi);\n        if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n        chunkTail.extend(blockChunk);\n      });\n      return chunkTail;\n    }\n\n    /**\n      @override\n    */\n    extractInput() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      let flags =\n        arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (fromPos === toPos) return '';\n      let input = '';\n      this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n        input += b.extractInput(fromPos, toPos, flags);\n      });\n      return input;\n    }\n    _findStopBefore(blockIndex) {\n      let stopBefore;\n      for (let si = 0; si < this._stops.length; ++si) {\n        const stop = this._stops[si];\n        if (stop <= blockIndex) stopBefore = stop;\n        else break;\n      }\n      return stopBefore;\n    }\n\n    /** Appends placeholder depending on laziness */\n    _appendPlaceholder(toBlockIndex) {\n      const details = new ChangeDetails();\n      if (this.lazy && toBlockIndex == null) return details;\n      const startBlockIter = this._mapPosToBlock(this.value.length);\n      if (!startBlockIter) return details;\n      const startBlockIndex = startBlockIter.index;\n      const endBlockIndex =\n        toBlockIndex != null ? toBlockIndex : this._blocks.length;\n      this._blocks.slice(startBlockIndex, endBlockIndex).forEach((b) => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n      return details;\n    }\n\n    /** Finds block in pos */\n    _mapPosToBlock(pos) {\n      let accVal = '';\n      for (let bi = 0; bi < this._blocks.length; ++bi) {\n        const block = this._blocks[bi];\n        const blockStartPos = accVal.length;\n        accVal += block.value;\n        if (pos <= accVal.length) {\n          return {\n            index: bi,\n            offset: pos - blockStartPos,\n          };\n        }\n      }\n    }\n\n    /** */\n    _blockStartPos(blockIndex) {\n      return this._blocks\n        .slice(0, blockIndex)\n        .reduce((pos, b) => (pos += b.value.length), 0);\n    }\n\n    /** */\n    _forEachBlocksInRange(fromPos) {\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      let fn = arguments.length > 2 ? arguments[2] : undefined;\n      const fromBlockIter = this._mapPosToBlock(fromPos);\n      if (fromBlockIter) {\n        const toBlockIter = this._mapPosToBlock(toPos);\n        // process first block\n        const isSameBlock =\n          toBlockIter && fromBlockIter.index === toBlockIter.index;\n        const fromBlockStartPos = fromBlockIter.offset;\n        const fromBlockEndPos =\n          toBlockIter && isSameBlock\n            ? toBlockIter.offset\n            : this._blocks[fromBlockIter.index].value.length;\n        fn(\n          this._blocks[fromBlockIter.index],\n          fromBlockIter.index,\n          fromBlockStartPos,\n          fromBlockEndPos\n        );\n        if (toBlockIter && !isSameBlock) {\n          // process intermediate blocks\n          for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n            fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n          }\n\n          // process last block\n          fn(\n            this._blocks[toBlockIter.index],\n            toBlockIter.index,\n            0,\n            toBlockIter.offset\n          );\n        }\n      }\n    }\n\n    /**\n      @override\n    */\n    remove() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      const removeDetails = super.remove(fromPos, toPos);\n      this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n        removeDetails.aggregate(b.remove(bFromPos, bToPos));\n      });\n      return removeDetails;\n    }\n\n    /**\n      @override\n    */\n    nearestInputPos(cursorPos) {\n      let direction =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : DIRECTION.NONE;\n      if (!this._blocks.length) return 0;\n      const cursor = new PatternCursor(this, cursorPos);\n      if (direction === DIRECTION.NONE) {\n        // -------------------------------------------------\n        // NONE should only go out from fixed to the right!\n        // -------------------------------------------------\n        if (cursor.pushRightBeforeInput()) return cursor.pos;\n        cursor.popState();\n        if (cursor.pushLeftBeforeInput()) return cursor.pos;\n        return this.value.length;\n      }\n\n      // FORCE is only about a|* otherwise is 0\n      if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n        // try to break fast when *|a\n        if (direction === DIRECTION.LEFT) {\n          cursor.pushRightBeforeFilled();\n          if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n          cursor.popState();\n        }\n\n        // forward flow\n        cursor.pushLeftBeforeInput();\n        cursor.pushLeftBeforeRequired();\n        cursor.pushLeftBeforeFilled();\n\n        // backward flow\n        if (direction === DIRECTION.LEFT) {\n          cursor.pushRightBeforeInput();\n          cursor.pushRightBeforeRequired();\n          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n          cursor.popState();\n          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n          cursor.popState();\n        }\n        if (cursor.ok) return cursor.pos;\n        if (direction === DIRECTION.FORCE_LEFT) return 0;\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n\n        // cursor.popState();\n        // if (\n        //   cursor.pushRightBeforeInput() &&\n        //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n        //   (!this.lazy || this.extractInput())\n        // ) return cursor.pos;\n\n        return 0;\n      }\n      if (\n        direction === DIRECTION.RIGHT ||\n        direction === DIRECTION.FORCE_RIGHT\n      ) {\n        // forward flow\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.pushRightBeforeFilled()) return cursor.pos;\n        if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n        // backward flow\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n      }\n      return cursorPos;\n    }\n\n    /**\n      @override\n    */\n    totalInputPositions() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      let total = 0;\n      this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n        total += b.totalInputPositions(bFromPos, bToPos);\n      });\n      return total;\n    }\n\n    /** Get block by name */\n    maskedBlock(name) {\n      return this.maskedBlocks(name)[0];\n    }\n\n    /** Get all blocks by name */\n    maskedBlocks(name) {\n      const indices = this._maskedBlocks[name];\n      if (!indices) return [];\n      return indices.map((gi) => this._blocks[gi]);\n    }\n  }\n  MaskedPattern.DEFAULTS = {\n    lazy: true,\n    placeholderChar: '_',\n  };\n  MaskedPattern.STOP_CHAR = '`';\n  MaskedPattern.ESCAPE_CHAR = '\\\\';\n  MaskedPattern.InputDefinition = PatternInputDefinition;\n  MaskedPattern.FixedDefinition = PatternFixedDefinition;\n  IMask.MaskedPattern = MaskedPattern;\n\n  /** Pattern which accepts ranges */\n  class MaskedRange extends MaskedPattern {\n    /**\n      Optionally sets max length of pattern.\n      Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n    */\n\n    /** Min bound */\n\n    /** Max bound */\n\n    /** */\n\n    get _matchFrom() {\n      return this.maxLength - String(this.from).length;\n    }\n\n    /**\n      @override\n    */\n    _update(opts) {\n      // TODO type\n      opts = Object.assign(\n        {\n          to: this.to || 0,\n          from: this.from || 0,\n          maxLength: this.maxLength || 0,\n        },\n        opts\n      );\n      let maxLength = String(opts.to).length;\n      if (opts.maxLength != null)\n        maxLength = Math.max(maxLength, opts.maxLength);\n      opts.maxLength = maxLength;\n      const fromStr = String(opts.from).padStart(maxLength, '0');\n      const toStr = String(opts.to).padStart(maxLength, '0');\n      let sameCharsCount = 0;\n      while (\n        sameCharsCount < toStr.length &&\n        toStr[sameCharsCount] === fromStr[sameCharsCount]\n      )\n        ++sameCharsCount;\n      opts.mask =\n        toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') +\n        '0'.repeat(maxLength - sameCharsCount);\n      super._update(opts);\n    }\n\n    /**\n      @override\n    */\n    get isComplete() {\n      return super.isComplete && Boolean(this.value);\n    }\n    boundaries(str) {\n      let minstr = '';\n      let maxstr = '';\n      const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n      if (num) {\n        minstr = '0'.repeat(placeholder.length) + num;\n        maxstr = '9'.repeat(placeholder.length) + num;\n      }\n      minstr = minstr.padEnd(this.maxLength, '0');\n      maxstr = maxstr.padEnd(this.maxLength, '9');\n      return [minstr, maxstr];\n    }\n\n    // TODO str is a single char everytime\n    /**\n      @override\n    */\n    doPrepare(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let details;\n      [ch, details] = normalizePrepare(\n        super.doPrepare(ch.replace(/\\D/g, ''), flags)\n      );\n      if (!this.autofix || !ch) return ch;\n      const fromStr = String(this.from).padStart(this.maxLength, '0');\n      const toStr = String(this.to).padStart(this.maxLength, '0');\n      let nextVal = this.value + ch;\n      if (nextVal.length > this.maxLength) return '';\n      const [minstr, maxstr] = this.boundaries(nextVal);\n      if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n      if (Number(minstr) > this.to) {\n        if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n          return [\n            '',\n            details.aggregate(\n              this.append(fromStr[nextVal.length - 1] + ch, flags)\n            ),\n          ];\n        }\n        return toStr[nextVal.length - 1];\n      }\n      return ch;\n    }\n\n    /**\n      @override\n    */\n    doValidate() {\n      const str = this.value;\n      const firstNonZero = str.search(/[^0]/);\n      if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n      const [minstr, maxstr] = this.boundaries(str);\n      return (\n        this.from <= Number(maxstr) &&\n        Number(minstr) <= this.to &&\n        super.doValidate(...arguments)\n      );\n    }\n  }\n  IMask.MaskedRange = MaskedRange;\n\n  /** Date mask */\n  class MaskedDate extends MaskedPattern {\n    /** Pattern mask for date according to {@link MaskedDate#format} */\n\n    /** Start date */\n\n    /** End date */\n\n    /** */\n\n    /**\n      @param {Object} opts\n    */\n    constructor(opts) {\n      super(Object.assign({}, MaskedDate.DEFAULTS, opts));\n    }\n\n    /**\n      @override\n    */\n    _update(opts) {\n      if (opts.mask === Date) delete opts.mask;\n      if (opts.pattern) opts.mask = opts.pattern;\n      const blocks = opts.blocks;\n      opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n      // adjust year block\n      if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n      if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n      if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {\n        opts.blocks.m.from = opts.min.getMonth() + 1;\n        opts.blocks.m.to = opts.max.getMonth() + 1;\n        if (opts.blocks.m.from === opts.blocks.m.to) {\n          opts.blocks.d.from = opts.min.getDate();\n          opts.blocks.d.to = opts.max.getDate();\n        }\n      }\n      Object.assign(opts.blocks, this.blocks, blocks);\n\n      // add autofix\n      Object.keys(opts.blocks).forEach((bk) => {\n        const b = opts.blocks[bk];\n        if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n      });\n      super._update(opts);\n    }\n\n    /**\n      @override\n    */\n    doValidate() {\n      const date = this.date;\n      return (\n        super.doValidate(...arguments) &&\n        (!this.isComplete ||\n          (this.isDateExist(this.value) &&\n            date != null &&\n            (this.min == null || this.min <= date) &&\n            (this.max == null || date <= this.max)))\n      );\n    }\n\n    /** Checks if date is exists */\n    isDateExist(str) {\n      return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n    }\n\n    /** Parsed Date */\n    get date() {\n      return this.typedValue;\n    }\n    set date(date) {\n      this.typedValue = date;\n    }\n\n    /**\n      @override\n    */\n    get typedValue() {\n      return this.isComplete ? super.typedValue : null;\n    }\n    set typedValue(value) {\n      super.typedValue = value;\n    }\n\n    /**\n      @override\n    */\n    maskEquals(mask) {\n      return mask === Date || super.maskEquals(mask);\n    }\n  }\n  MaskedDate.DEFAULTS = {\n    pattern: 'd{.}`m{.}`Y',\n    format: (date) => {\n      if (!date) return '';\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      return [day, month, year].join('.');\n    },\n    parse: (str) => {\n      const [day, month, year] = str.split('.');\n      return new Date(year, month - 1, day);\n    },\n  };\n  MaskedDate.GET_DEFAULT_BLOCKS = () => ({\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2,\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2,\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999,\n    },\n  });\n  IMask.MaskedDate = MaskedDate;\n\n  /**\n    Generic element API to use with mask\n    @interface\n  */\n  class MaskElement {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** Safely returns selection start */\n    get selectionStart() {\n      let start;\n      try {\n        start = this._unsafeSelectionStart;\n      } catch (e) {}\n      return start != null ? start : this.value.length;\n    }\n\n    /** Safely returns selection end */\n    get selectionEnd() {\n      let end;\n      try {\n        end = this._unsafeSelectionEnd;\n      } catch (e) {}\n      return end != null ? end : this.value.length;\n    }\n\n    /** Safely sets element selection */\n    select(start, end) {\n      if (\n        start == null ||\n        end == null ||\n        (start === this.selectionStart && end === this.selectionEnd)\n      )\n        return;\n      try {\n        this._unsafeSelect(start, end);\n      } catch (e) {}\n    }\n\n    /** Should be overriden in subclasses */\n    _unsafeSelect(start, end) {}\n    /** Should be overriden in subclasses */\n    get isActive() {\n      return false;\n    }\n    /** Should be overriden in subclasses */\n    bindEvents(handlers) {}\n    /** Should be overriden in subclasses */\n    unbindEvents() {}\n  }\n  IMask.MaskElement = MaskElement;\n\n  /** Bridge between HTMLElement and {@link Masked} */\n  class HTMLMaskElement extends MaskElement {\n    /** Mapping between HTMLElement events and mask internal events */\n\n    /** HTMLElement to use mask on */\n\n    /**\n      @param {HTMLInputElement|HTMLTextAreaElement} input\n    */\n    constructor(input) {\n      super();\n      this.input = input;\n      this._handlers = {};\n    }\n\n    /** */\n    // $FlowFixMe https://github.com/facebook/flow/issues/2839\n    get rootElement() {\n      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n      return (_this$input$getRootNo =\n        (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) ===\n          null || _this$input$getRootNo2 === void 0\n          ? void 0\n          : _this$input$getRootNo2.call(_this$input)) !== null &&\n        _this$input$getRootNo !== void 0\n        ? _this$input$getRootNo\n        : document;\n    }\n\n    /**\n      Is element in focus\n      @readonly\n    */\n    get isActive() {\n      //$FlowFixMe\n      return this.input === this.rootElement.activeElement;\n    }\n\n    /**\n      Returns HTMLElement selection start\n      @override\n    */\n    get _unsafeSelectionStart() {\n      return this.input.selectionStart;\n    }\n\n    /**\n      Returns HTMLElement selection end\n      @override\n    */\n    get _unsafeSelectionEnd() {\n      return this.input.selectionEnd;\n    }\n\n    /**\n      Sets HTMLElement selection\n      @override\n    */\n    _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n\n    /**\n      HTMLElement value\n      @override\n    */\n    get value() {\n      return this.input.value;\n    }\n    set value(value) {\n      this.input.value = value;\n    }\n\n    /**\n      Binds HTMLElement events to mask internal events\n      @override\n    */\n    bindEvents(handlers) {\n      Object.keys(handlers).forEach((event) =>\n        this._toggleEventHandler(\n          HTMLMaskElement.EVENTS_MAP[event],\n          handlers[event]\n        )\n      );\n    }\n\n    /**\n      Unbinds HTMLElement events to mask internal events\n      @override\n    */\n    unbindEvents() {\n      Object.keys(this._handlers).forEach((event) =>\n        this._toggleEventHandler(event)\n      );\n    }\n\n    /** */\n    _toggleEventHandler(event, handler) {\n      if (this._handlers[event]) {\n        this.input.removeEventListener(event, this._handlers[event]);\n        delete this._handlers[event];\n      }\n      if (handler) {\n        this.input.addEventListener(event, handler);\n        this._handlers[event] = handler;\n      }\n    }\n  }\n  HTMLMaskElement.EVENTS_MAP = {\n    selectionChange: 'keydown',\n    input: 'input',\n    drop: 'drop',\n    click: 'click',\n    focus: 'focus',\n    commit: 'blur',\n  };\n  IMask.HTMLMaskElement = HTMLMaskElement;\n\n  class HTMLContenteditableMaskElement extends HTMLMaskElement {\n    /**\n      Returns HTMLElement selection start\n      @override\n    */\n    get _unsafeSelectionStart() {\n      const root = this.rootElement;\n      const selection = root.getSelection && root.getSelection();\n      const anchorOffset = selection && selection.anchorOffset;\n      const focusOffset = selection && selection.focusOffset;\n      if (\n        focusOffset == null ||\n        anchorOffset == null ||\n        anchorOffset < focusOffset\n      ) {\n        return anchorOffset;\n      }\n      return focusOffset;\n    }\n\n    /**\n      Returns HTMLElement selection end\n      @override\n    */\n    get _unsafeSelectionEnd() {\n      const root = this.rootElement;\n      const selection = root.getSelection && root.getSelection();\n      const anchorOffset = selection && selection.anchorOffset;\n      const focusOffset = selection && selection.focusOffset;\n      if (\n        focusOffset == null ||\n        anchorOffset == null ||\n        anchorOffset > focusOffset\n      ) {\n        return anchorOffset;\n      }\n      return focusOffset;\n    }\n\n    /**\n      Sets HTMLElement selection\n      @override\n    */\n    _unsafeSelect(start, end) {\n      if (!this.rootElement.createRange) return;\n      const range = this.rootElement.createRange();\n      range.setStart(this.input.firstChild || this.input, start);\n      range.setEnd(this.input.lastChild || this.input, end);\n      const root = this.rootElement;\n      const selection = root.getSelection && root.getSelection();\n      if (selection) {\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n\n    /**\n      HTMLElement value\n      @override\n    */\n    get value() {\n      // $FlowFixMe\n      return this.input.textContent;\n    }\n    set value(value) {\n      this.input.textContent = value;\n    }\n  }\n  IMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\n  const _excluded$1 = ['mask'];\n\n  /** Listens to element events and controls changes between element and {@link Masked} */\n  class InputMask {\n    /**\n      View element\n      @readonly\n    */\n\n    /**\n      Internal {@link Masked} model\n      @readonly\n    */\n\n    /**\n      @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n      @param {Object} opts\n    */\n    constructor(el, opts) {\n      this.el =\n        el instanceof MaskElement\n          ? el\n          : el.isContentEditable &&\n            el.tagName !== 'INPUT' &&\n            el.tagName !== 'TEXTAREA'\n          ? new HTMLContenteditableMaskElement(el)\n          : new HTMLMaskElement(el);\n      this.masked = createMask(opts);\n      this._listeners = {};\n      this._value = '';\n      this._unmaskedValue = '';\n      this._saveSelection = this._saveSelection.bind(this);\n      this._onInput = this._onInput.bind(this);\n      this._onChange = this._onChange.bind(this);\n      this._onDrop = this._onDrop.bind(this);\n      this._onFocus = this._onFocus.bind(this);\n      this._onClick = this._onClick.bind(this);\n      this.alignCursor = this.alignCursor.bind(this);\n      this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n      this._bindEvents();\n\n      // refresh\n      this.updateValue();\n      this._onChange();\n    }\n\n    /** Read or update mask */\n    get mask() {\n      return this.masked.mask;\n    }\n    maskEquals(mask) {\n      var _this$masked;\n      return (\n        mask == null ||\n        ((_this$masked = this.masked) === null || _this$masked === void 0\n          ? void 0\n          : _this$masked.maskEquals(mask))\n      );\n    }\n    set mask(mask) {\n      if (this.maskEquals(mask)) return;\n\n      // $FlowFixMe No ideas ... after update\n      if (\n        !(mask instanceof IMask.Masked) &&\n        this.masked.constructor === maskedClass(mask)\n      ) {\n        this.masked.updateOptions({\n          mask,\n        });\n        return;\n      }\n      const masked = createMask({\n        mask,\n      });\n      masked.unmaskedValue = this.masked.unmaskedValue;\n      this.masked = masked;\n    }\n\n    /** Raw value */\n    get value() {\n      return this._value;\n    }\n    set value(str) {\n      if (this.value === str) return;\n      this.masked.value = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Unmasked value */\n    get unmaskedValue() {\n      return this._unmaskedValue;\n    }\n    set unmaskedValue(str) {\n      if (this.unmaskedValue === str) return;\n      this.masked.unmaskedValue = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Typed unmasked value */\n    get typedValue() {\n      return this.masked.typedValue;\n    }\n    set typedValue(val) {\n      if (this.masked.typedValueEquals(val)) return;\n      this.masked.typedValue = val;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Display value */\n    get displayValue() {\n      return this.masked.displayValue;\n    }\n\n    /**\n      Starts listening to element events\n      @protected\n    */\n    _bindEvents() {\n      this.el.bindEvents({\n        selectionChange: this._saveSelection,\n        input: this._onInput,\n        drop: this._onDrop,\n        click: this._onClick,\n        focus: this._onFocus,\n        commit: this._onChange,\n      });\n    }\n\n    /**\n      Stops listening to element events\n      @protected\n     */\n    _unbindEvents() {\n      if (this.el) this.el.unbindEvents();\n    }\n\n    /**\n      Fires custom event\n      @protected\n     */\n    _fireEvent(ev) {\n      for (\n        var _len = arguments.length,\n          args = new Array(_len > 1 ? _len - 1 : 0),\n          _key = 1;\n        _key < _len;\n        _key++\n      ) {\n        args[_key - 1] = arguments[_key];\n      }\n      const listeners = this._listeners[ev];\n      if (!listeners) return;\n      listeners.forEach((l) => l(...args));\n    }\n\n    /**\n      Current selection start\n      @readonly\n    */\n    get selectionStart() {\n      return this._cursorChanging\n        ? this._changingCursorPos\n        : this.el.selectionStart;\n    }\n\n    /** Current cursor position */\n    get cursorPos() {\n      return this._cursorChanging\n        ? this._changingCursorPos\n        : this.el.selectionEnd;\n    }\n    set cursorPos(pos) {\n      if (!this.el || !this.el.isActive) return;\n      this.el.select(pos, pos);\n      this._saveSelection();\n    }\n\n    /**\n      Stores current selection\n      @protected\n    */\n    _saveSelection /* ev */() {\n      if (this.displayValue !== this.el.value) {\n        console.warn(\n          'Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'\n        ); // eslint-disable-line no-console\n      }\n\n      this._selection = {\n        start: this.selectionStart,\n        end: this.cursorPos,\n      };\n    }\n\n    /** Syncronizes model value from view */\n    updateValue() {\n      this.masked.value = this.el.value;\n      this._value = this.masked.value;\n    }\n\n    /** Syncronizes view from model value, fires change events */\n    updateControl() {\n      const newUnmaskedValue = this.masked.unmaskedValue;\n      const newValue = this.masked.value;\n      const newDisplayValue = this.displayValue;\n      const isChanged =\n        this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n      this._unmaskedValue = newUnmaskedValue;\n      this._value = newValue;\n      if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n      if (isChanged) this._fireChangeEvents();\n    }\n\n    /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n    updateOptions(opts) {\n      const { mask } = opts,\n        restOpts = _objectWithoutPropertiesLoose(opts, _excluded$1);\n      const updateMask = !this.maskEquals(mask);\n      const updateOpts = !objectIncludes(this.masked, restOpts);\n      if (updateMask) this.mask = mask;\n      if (updateOpts) this.masked.updateOptions(restOpts);\n      if (updateMask || updateOpts) this.updateControl();\n    }\n\n    /** Updates cursor */\n    updateCursor(cursorPos) {\n      if (cursorPos == null) return;\n      this.cursorPos = cursorPos;\n\n      // also queue change cursor for mobile browsers\n      this._delayUpdateCursor(cursorPos);\n    }\n\n    /**\n      Delays cursor update to support mobile browsers\n      @private\n    */\n    _delayUpdateCursor(cursorPos) {\n      this._abortUpdateCursor();\n      this._changingCursorPos = cursorPos;\n      this._cursorChanging = setTimeout(() => {\n        if (!this.el) return; // if was destroyed\n        this.cursorPos = this._changingCursorPos;\n        this._abortUpdateCursor();\n      }, 10);\n    }\n\n    /**\n      Fires custom events\n      @protected\n    */\n    _fireChangeEvents() {\n      this._fireEvent('accept', this._inputEvent);\n      if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n    }\n\n    /**\n      Aborts delayed cursor update\n      @private\n    */\n    _abortUpdateCursor() {\n      if (this._cursorChanging) {\n        clearTimeout(this._cursorChanging);\n        delete this._cursorChanging;\n      }\n    }\n\n    /** Aligns cursor to nearest available position */\n    alignCursor() {\n      this.cursorPos = this.masked.nearestInputPos(\n        this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT)\n      );\n    }\n\n    /** Aligns cursor only if selection is empty */\n    alignCursorFriendly() {\n      if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n      this.alignCursor();\n    }\n\n    /** Adds listener on custom event */\n    on(ev, handler) {\n      if (!this._listeners[ev]) this._listeners[ev] = [];\n      this._listeners[ev].push(handler);\n      return this;\n    }\n\n    /** Removes custom event listener */\n    off(ev, handler) {\n      if (!this._listeners[ev]) return this;\n      if (!handler) {\n        delete this._listeners[ev];\n        return this;\n      }\n      const hIndex = this._listeners[ev].indexOf(handler);\n      if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n      return this;\n    }\n\n    /** Handles view input event */\n    _onInput(e) {\n      this._inputEvent = e;\n      this._abortUpdateCursor();\n\n      // fix strange IE behavior\n      if (!this._selection) return this.updateValue();\n      const details = new ActionDetails(\n        // new state\n        this.el.value,\n        this.cursorPos,\n        // old state\n        this.displayValue,\n        this._selection\n      );\n      const oldRawValue = this.masked.rawInputValue;\n      const offset = this.masked.splice(\n        details.startChangePos,\n        details.removed.length,\n        details.inserted,\n        details.removeDirection,\n        {\n          input: true,\n          raw: true,\n        }\n      ).offset;\n\n      // force align in remove direction only if no input chars were removed\n      // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n      const removeDirection =\n        oldRawValue === this.masked.rawInputValue\n          ? details.removeDirection\n          : DIRECTION.NONE;\n      let cursorPos = this.masked.nearestInputPos(\n        details.startChangePos + offset,\n        removeDirection\n      );\n      if (removeDirection !== DIRECTION.NONE)\n        cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n      this.updateControl();\n      this.updateCursor(cursorPos);\n      delete this._inputEvent;\n    }\n\n    /** Handles view change event and commits model value */\n    _onChange() {\n      if (this.displayValue !== this.el.value) {\n        this.updateValue();\n      }\n      this.masked.doCommit();\n      this.updateControl();\n      this._saveSelection();\n    }\n\n    /** Handles view drop event, prevents by default */\n    _onDrop(ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    /** Restore last selection on focus */\n    _onFocus(ev) {\n      this.alignCursorFriendly();\n    }\n\n    /** Restore last selection on focus */\n    _onClick(ev) {\n      this.alignCursorFriendly();\n    }\n\n    /** Unbind view events and removes element reference */\n    destroy() {\n      this._unbindEvents();\n      // $FlowFixMe why not do so?\n      this._listeners.length = 0;\n      // $FlowFixMe\n      delete this.el;\n    }\n  }\n  IMask.InputMask = InputMask;\n\n  /** Pattern which validates enum values */\n  class MaskedEnum extends MaskedPattern {\n    /**\n      @override\n      @param {Object} opts\n    */\n    _update(opts) {\n      // TODO type\n      if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n      super._update(opts);\n    }\n\n    /**\n      @override\n    */\n    doValidate() {\n      return (\n        this.enum.some((e) => e.indexOf(this.unmaskedValue) >= 0) &&\n        super.doValidate(...arguments)\n      );\n    }\n  }\n  IMask.MaskedEnum = MaskedEnum;\n\n  /**\n    Number mask\n    @param {Object} opts\n    @param {string} opts.radix - Single char\n    @param {string} opts.thousandsSeparator - Single char\n    @param {Array<string>} opts.mapToRadix - Array of single chars\n    @param {number} opts.min\n    @param {number} opts.max\n    @param {number} opts.scale - Digits after point\n    @param {boolean} opts.signed - Allow negative\n    @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n    @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n  */\n  class MaskedNumber extends Masked {\n    /** Single char */\n\n    /** Single char */\n\n    /** Array of single chars */\n\n    /** */\n\n    /** */\n\n    /** Digits after point */\n\n    /** */\n\n    /** Flag to remove leading and trailing zeros in the end of editing */\n\n    /** Flag to pad trailing zeros after point in the end of editing */\n\n    constructor(opts) {\n      super(Object.assign({}, MaskedNumber.DEFAULTS, opts));\n    }\n\n    /**\n      @override\n    */\n    _update(opts) {\n      super._update(opts);\n      this._updateRegExps();\n    }\n\n    /** */\n    _updateRegExps() {\n      let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n      let mid = '\\\\d*';\n      let end =\n        (this.scale\n          ? '('\n              .concat(escapeRegExp(this.radix), '\\\\d{0,')\n              .concat(this.scale, '})?')\n          : '') + '$';\n      this._numberRegExp = new RegExp(start + mid + end);\n      this._mapToRadixRegExp = new RegExp(\n        '['.concat(this.mapToRadix.map(escapeRegExp).join(''), ']'),\n        'g'\n      );\n      this._thousandsSeparatorRegExp = new RegExp(\n        escapeRegExp(this.thousandsSeparator),\n        'g'\n      );\n    }\n\n    /** */\n    _removeThousandsSeparators(value) {\n      return value.replace(this._thousandsSeparatorRegExp, '');\n    }\n\n    /** */\n    _insertThousandsSeparators(value) {\n      // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n      const parts = value.split(this.radix);\n      parts[0] = parts[0].replace(\n        /\\B(?=(\\d{3})+(?!\\d))/g,\n        this.thousandsSeparator\n      );\n      return parts.join(this.radix);\n    }\n\n    /**\n      @override\n    */\n    doPrepare(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      ch = this._removeThousandsSeparators(\n        this.scale &&\n          this.mapToRadix.length &&\n          /*\n        radix should be mapped when\n        1) input is done from keyboard = flags.input && flags.raw\n        2) unmasked value is set = !flags.input && !flags.raw\n        and should not be mapped when\n        1) value is set = flags.input && !flags.raw\n        2) raw value is set = !flags.input && flags.raw\n      */\n          ((flags.input && flags.raw) || (!flags.input && !flags.raw))\n          ? ch.replace(this._mapToRadixRegExp, this.radix)\n          : ch\n      );\n      const [prepCh, details] = normalizePrepare(super.doPrepare(ch, flags));\n      if (ch && !prepCh) details.skip = true;\n      return [prepCh, details];\n    }\n\n    /** */\n    _separatorsCount(to) {\n      let extendOnSeparators =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : false;\n      let count = 0;\n      for (let pos = 0; pos < to; ++pos) {\n        if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n          ++count;\n          if (extendOnSeparators) to += this.thousandsSeparator.length;\n        }\n      }\n      return count;\n    }\n\n    /** */\n    _separatorsCountFromSlice() {\n      let slice =\n        arguments.length > 0 && arguments[0] !== undefined\n          ? arguments[0]\n          : this._value;\n      return this._separatorsCount(\n        this._removeThousandsSeparators(slice).length,\n        true\n      );\n    }\n\n    /**\n      @override\n    */\n    extractInput() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      let flags = arguments.length > 2 ? arguments[2] : undefined;\n      [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n      return this._removeThousandsSeparators(\n        super.extractInput(fromPos, toPos, flags)\n      );\n    }\n\n    /**\n      @override\n    */\n    _appendCharRaw(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n      const prevBeforeTailValue =\n        flags.tail && flags._beforeTailState\n          ? flags._beforeTailState._value\n          : this._value;\n      const prevBeforeTailSeparatorsCount =\n        this._separatorsCountFromSlice(prevBeforeTailValue);\n      this._value = this._removeThousandsSeparators(this.value);\n      const appendDetails = super._appendCharRaw(ch, flags);\n      this._value = this._insertThousandsSeparators(this._value);\n      const beforeTailValue =\n        flags.tail && flags._beforeTailState\n          ? flags._beforeTailState._value\n          : this._value;\n      const beforeTailSeparatorsCount =\n        this._separatorsCountFromSlice(beforeTailValue);\n      appendDetails.tailShift +=\n        (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) *\n        this.thousandsSeparator.length;\n      appendDetails.skip =\n        !appendDetails.rawInserted && ch === this.thousandsSeparator;\n      return appendDetails;\n    }\n\n    /** */\n    _findSeparatorAround(pos) {\n      if (this.thousandsSeparator) {\n        const searchFrom = pos - this.thousandsSeparator.length + 1;\n        const separatorPos = this.value.indexOf(\n          this.thousandsSeparator,\n          searchFrom\n        );\n        if (separatorPos <= pos) return separatorPos;\n      }\n      return -1;\n    }\n    _adjustRangeWithSeparators(from, to) {\n      const separatorAroundFromPos = this._findSeparatorAround(from);\n      if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n      const separatorAroundToPos = this._findSeparatorAround(to);\n      if (separatorAroundToPos >= 0)\n        to = separatorAroundToPos + this.thousandsSeparator.length;\n      return [from, to];\n    }\n\n    /**\n      @override\n    */\n    remove() {\n      let fromPos =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let toPos =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : this.value.length;\n      [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n      const valueBeforePos = this.value.slice(0, fromPos);\n      const valueAfterPos = this.value.slice(toPos);\n      const prevBeforeTailSeparatorsCount = this._separatorsCount(\n        valueBeforePos.length\n      );\n      this._value = this._insertThousandsSeparators(\n        this._removeThousandsSeparators(valueBeforePos + valueAfterPos)\n      );\n      const beforeTailSeparatorsCount =\n        this._separatorsCountFromSlice(valueBeforePos);\n      return new ChangeDetails({\n        tailShift:\n          (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) *\n          this.thousandsSeparator.length,\n      });\n    }\n\n    /**\n      @override\n    */\n    nearestInputPos(cursorPos, direction) {\n      if (!this.thousandsSeparator) return cursorPos;\n      switch (direction) {\n        case DIRECTION.NONE:\n        case DIRECTION.LEFT:\n        case DIRECTION.FORCE_LEFT: {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos =\n              separatorAtLeftPos + this.thousandsSeparator.length;\n            if (\n              cursorPos < separatorAtLeftEndPos ||\n              this.value.length <= separatorAtLeftEndPos ||\n              direction === DIRECTION.FORCE_LEFT\n            ) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n        case DIRECTION.RIGHT:\n        case DIRECTION.FORCE_RIGHT: {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n      }\n      return cursorPos;\n    }\n\n    /**\n      @override\n    */\n    doValidate(flags) {\n      // validate as string\n      let valid = Boolean(\n        this._removeThousandsSeparators(this.value).match(this._numberRegExp)\n      );\n      if (valid) {\n        // validate as number\n        const number = this.number;\n        valid =\n          valid &&\n          !isNaN(number) &&\n          // check min bound for negative values\n          (this.min == null || this.min >= 0 || this.min <= this.number) &&\n          // check max bound for positive values\n          (this.max == null || this.max <= 0 || this.number <= this.max);\n      }\n      return valid && super.doValidate(flags);\n    }\n\n    /**\n      @override\n    */\n    doCommit() {\n      if (this.value) {\n        const number = this.number;\n        let validnum = number;\n\n        // check bounds\n        if (this.min != null) validnum = Math.max(validnum, this.min);\n        if (this.max != null) validnum = Math.min(validnum, this.max);\n        if (validnum !== number) this.unmaskedValue = this.doFormat(validnum);\n        let formatted = this.value;\n        if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n        if (this.padFractionalZeros && this.scale > 0)\n          formatted = this._padFractionalZeros(formatted);\n        this._value = formatted;\n      }\n      super.doCommit();\n    }\n\n    /** */\n    _normalizeZeros(value) {\n      const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n      // remove leading zeros\n      parts[0] = parts[0].replace(\n        /^(\\D*)(0*)(\\d*)/,\n        (match, sign, zeros, num) => sign + num\n      );\n      // add leading zero\n      if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n      if (parts.length > 1) {\n        parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n        if (!parts[1].length) parts.length = 1; // remove fractional\n      }\n\n      return this._insertThousandsSeparators(parts.join(this.radix));\n    }\n\n    /** */\n    _padFractionalZeros(value) {\n      if (!value) return value;\n      const parts = value.split(this.radix);\n      if (parts.length < 2) parts.push('');\n      parts[1] = parts[1].padEnd(this.scale, '0');\n      return parts.join(this.radix);\n    }\n\n    /** */\n    doSkipInvalid(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let checkTail = arguments.length > 2 ? arguments[2] : undefined;\n      const dropFractional =\n        this.scale === 0 &&\n        ch !== this.thousandsSeparator &&\n        (ch === this.radix ||\n          ch === MaskedNumber.UNMASKED_RADIX ||\n          this.mapToRadix.includes(ch));\n      return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n    }\n\n    /**\n      @override\n    */\n    get unmaskedValue() {\n      return this._removeThousandsSeparators(\n        this._normalizeZeros(this.value)\n      ).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n    }\n    set unmaskedValue(unmaskedValue) {\n      super.unmaskedValue = unmaskedValue;\n    }\n\n    /**\n      @override\n    */\n    get typedValue() {\n      return this.doParse(this.unmaskedValue);\n    }\n    set typedValue(n) {\n      this.rawInputValue = this.doFormat(n).replace(\n        MaskedNumber.UNMASKED_RADIX,\n        this.radix\n      );\n    }\n\n    /** Parsed Number */\n    get number() {\n      return this.typedValue;\n    }\n    set number(number) {\n      this.typedValue = number;\n    }\n\n    /**\n      Is negative allowed\n      @readonly\n    */\n    get allowNegative() {\n      return (\n        this.signed ||\n        (this.min != null && this.min < 0) ||\n        (this.max != null && this.max < 0)\n      );\n    }\n\n    /**\n      @override\n    */\n    typedValueEquals(value) {\n      // handle  0 -> '' case (typed = 0 even if value = '')\n      // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n      return (\n        (super.typedValueEquals(value) ||\n          (MaskedNumber.EMPTY_VALUES.includes(value) &&\n            MaskedNumber.EMPTY_VALUES.includes(this.typedValue))) &&\n        !(value === 0 && this.value === '')\n      );\n    }\n  }\n  MaskedNumber.UNMASKED_RADIX = '.';\n  MaskedNumber.DEFAULTS = {\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n    scale: 2,\n    signed: false,\n    normalizeZeros: true,\n    padFractionalZeros: false,\n    parse: Number,\n    format: (n) =>\n      n.toLocaleString('en-US', {\n        useGrouping: false,\n        maximumFractionDigits: 20,\n      }),\n  };\n  MaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n  IMask.MaskedNumber = MaskedNumber;\n\n  /** Masking by custom Function */\n  class MaskedFunction extends Masked {\n    /**\n      @override\n      @param {Object} opts\n    */\n    _update(opts) {\n      if (opts.mask) opts.validate = opts.mask;\n      super._update(opts);\n    }\n  }\n  IMask.MaskedFunction = MaskedFunction;\n\n  const _excluded = ['compiledMasks', 'currentMaskRef', 'currentMask'],\n    _excluded2 = ['mask'];\n  /** Dynamic mask for choosing apropriate mask in run-time */\n  class MaskedDynamic extends Masked {\n    /** Currently chosen mask */\n\n    /** Compliled {@link Masked} options */\n\n    /** Chooses {@link Masked} depending on input value */\n\n    /**\n      @param {Object} opts\n    */\n    constructor(opts) {\n      super(Object.assign({}, MaskedDynamic.DEFAULTS, opts));\n      this.currentMask = null;\n    }\n\n    /**\n      @override\n    */\n    _update(opts) {\n      super._update(opts);\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask)\n          ? opts.mask.map((m) => createMask(m))\n          : [];\n\n        // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n      }\n    }\n\n    /**\n      @override\n    */\n    _appendCharRaw(ch) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const details = this._applyDispatch(ch, flags);\n      if (this.currentMask) {\n        details.aggregate(\n          this.currentMask._appendChar(ch, this.currentMaskFlags(flags))\n        );\n      }\n      return details;\n    }\n    _applyDispatch() {\n      let appended =\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let tail =\n        arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      const prevValueBeforeTail =\n        flags.tail && flags._beforeTailState != null\n          ? flags._beforeTailState._value\n          : this.value;\n      const inputValue = this.rawInputValue;\n      const insertValue =\n        flags.tail && flags._beforeTailState != null\n          ? // $FlowFixMe - tired to fight with type system\n            flags._beforeTailState._rawInputValue\n          : inputValue;\n      const tailValue = inputValue.slice(insertValue.length);\n      const prevMask = this.currentMask;\n      const details = new ChangeDetails();\n      const prevMaskState =\n        prevMask === null || prevMask === void 0 ? void 0 : prevMask.state;\n\n      // clone flags to prevent overwriting `_beforeTailState`\n      this.currentMask = this.doDispatch(\n        appended,\n        Object.assign({}, flags),\n        tail\n      );\n\n      // restore state after dispatch\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset();\n          if (insertValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            const d = this.currentMask.append(insertValue, {\n              raw: true,\n            });\n            details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n          }\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true,\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n      return details;\n    }\n    _appendPlaceholder() {\n      const details = this._applyDispatch(...arguments);\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n      return details;\n    }\n\n    /**\n     @override\n    */\n    _appendEager() {\n      const details = this._applyDispatch(...arguments);\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendEager());\n      }\n      return details;\n    }\n    appendTail(tail) {\n      const details = new ChangeDetails();\n      if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n      return details.aggregate(\n        this.currentMask\n          ? this.currentMask.appendTail(tail)\n          : super.appendTail(tail)\n      );\n    }\n    currentMaskFlags(flags) {\n      var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n      return Object.assign({}, flags, {\n        _beforeTailState:\n          (((_flags$_beforeTailSta = flags._beforeTailState) === null ||\n          _flags$_beforeTailSta === void 0\n            ? void 0\n            : _flags$_beforeTailSta.currentMaskRef) === this.currentMask &&\n            ((_flags$_beforeTailSta2 = flags._beforeTailState) === null ||\n            _flags$_beforeTailSta2 === void 0\n              ? void 0\n              : _flags$_beforeTailSta2.currentMask)) ||\n          flags._beforeTailState,\n      });\n    }\n\n    /**\n      @override\n    */\n    doDispatch(appended) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let tail =\n        arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      return this.dispatch(appended, this, flags, tail);\n    }\n\n    /**\n      @override\n    */\n    doValidate(flags) {\n      return (\n        super.doValidate(flags) &&\n        (!this.currentMask ||\n          this.currentMask.doValidate(this.currentMaskFlags(flags)))\n      );\n    }\n\n    /**\n      @override\n    */\n    doPrepare(str) {\n      let flags =\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n      if (this.currentMask) {\n        let currentDetails;\n        [s, currentDetails] = normalizePrepare(\n          super.doPrepare(s, this.currentMaskFlags(flags))\n        );\n        details = details.aggregate(currentDetails);\n      }\n      return [s, details];\n    }\n\n    /**\n      @override\n    */\n    reset() {\n      var _this$currentMask;\n      (_this$currentMask = this.currentMask) === null ||\n      _this$currentMask === void 0\n        ? void 0\n        : _this$currentMask.reset();\n      this.compiledMasks.forEach((m) => m.reset());\n    }\n\n    /**\n      @override\n    */\n    get value() {\n      return this.currentMask ? this.currentMask.value : '';\n    }\n    set value(value) {\n      super.value = value;\n    }\n\n    /**\n      @override\n    */\n    get unmaskedValue() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    }\n    set unmaskedValue(unmaskedValue) {\n      super.unmaskedValue = unmaskedValue;\n    }\n\n    /**\n      @override\n    */\n    get typedValue() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    }\n\n    // probably typedValue should not be used with dynamic\n    set typedValue(value) {\n      let unmaskedValue = String(value);\n\n      // double check it\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n      this.unmaskedValue = unmaskedValue;\n    }\n    get displayValue() {\n      return this.currentMask ? this.currentMask.displayValue : '';\n    }\n\n    /**\n      @override\n    */\n    get isComplete() {\n      var _this$currentMask2;\n      return Boolean(\n        (_this$currentMask2 = this.currentMask) === null ||\n          _this$currentMask2 === void 0\n          ? void 0\n          : _this$currentMask2.isComplete\n      );\n    }\n\n    /**\n      @override\n    */\n    get isFilled() {\n      var _this$currentMask3;\n      return Boolean(\n        (_this$currentMask3 = this.currentMask) === null ||\n          _this$currentMask3 === void 0\n          ? void 0\n          : _this$currentMask3.isFilled\n      );\n    }\n\n    /**\n      @override\n    */\n    remove() {\n      const details = new ChangeDetails();\n      if (this.currentMask) {\n        details\n          .aggregate(this.currentMask.remove(...arguments))\n          // update with dispatch\n          .aggregate(this._applyDispatch());\n      }\n      return details;\n    }\n\n    /**\n      @override\n    */\n    get state() {\n      var _this$currentMask4;\n      return Object.assign({}, super.state, {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map((m) => m.state),\n        currentMaskRef: this.currentMask,\n        currentMask:\n          (_this$currentMask4 = this.currentMask) === null ||\n          _this$currentMask4 === void 0\n            ? void 0\n            : _this$currentMask4.state,\n      });\n    }\n    set state(state) {\n      const { compiledMasks, currentMaskRef, currentMask } = state,\n        maskedState = _objectWithoutPropertiesLoose(state, _excluded);\n      this.compiledMasks.forEach((m, mi) => (m.state = compiledMasks[mi]));\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n      super.state = maskedState;\n    }\n\n    /**\n      @override\n    */\n    extractInput() {\n      return this.currentMask\n        ? this.currentMask.extractInput(...arguments)\n        : '';\n    }\n\n    /**\n      @override\n    */\n    extractTail() {\n      return this.currentMask\n        ? this.currentMask.extractTail(...arguments)\n        : super.extractTail(...arguments);\n    }\n\n    /**\n      @override\n    */\n    doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n      super.doCommit();\n    }\n\n    /**\n      @override\n    */\n    nearestInputPos() {\n      return this.currentMask\n        ? this.currentMask.nearestInputPos(...arguments)\n        : super.nearestInputPos(...arguments);\n    }\n    get overwrite() {\n      return this.currentMask ? this.currentMask.overwrite : super.overwrite;\n    }\n    set overwrite(overwrite) {\n      console.warn(\n        '\"overwrite\" option is not available in dynamic mask, use this option in siblings'\n      );\n    }\n    get eager() {\n      return this.currentMask ? this.currentMask.eager : super.eager;\n    }\n    set eager(eager) {\n      console.warn(\n        '\"eager\" option is not available in dynamic mask, use this option in siblings'\n      );\n    }\n    get skipInvalid() {\n      return this.currentMask\n        ? this.currentMask.skipInvalid\n        : super.skipInvalid;\n    }\n    set skipInvalid(skipInvalid) {\n      if (this.isInitialized || skipInvalid !== Masked.DEFAULTS.skipInvalid) {\n        console.warn(\n          '\"skipInvalid\" option is not available in dynamic mask, use this option in siblings'\n        );\n      }\n    }\n\n    /**\n      @override\n    */\n    maskEquals(mask) {\n      return (\n        Array.isArray(mask) &&\n        this.compiledMasks.every((m, mi) => {\n          if (!mask[mi]) return;\n          const _mask$mi = mask[mi],\n            { mask: oldMask } = _mask$mi,\n            restOpts = _objectWithoutPropertiesLoose(_mask$mi, _excluded2);\n          return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n        })\n      );\n    }\n\n    /**\n      @override\n    */\n    typedValueEquals(value) {\n      var _this$currentMask5;\n      return Boolean(\n        (_this$currentMask5 = this.currentMask) === null ||\n          _this$currentMask5 === void 0\n          ? void 0\n          : _this$currentMask5.typedValueEquals(value)\n      );\n    }\n  }\n  MaskedDynamic.DEFAULTS = {\n    dispatch: (appended, masked, flags, tail) => {\n      if (!masked.compiledMasks.length) return;\n      const inputValue = masked.rawInputValue;\n\n      // simulate input\n      const inputs = masked.compiledMasks.map((m, index) => {\n        const isCurrent = masked.currentMask === m;\n        const startInputPos = isCurrent\n          ? m.value.length\n          : m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT);\n        if (m.rawInputValue !== inputValue) {\n          m.reset();\n          m.append(inputValue, {\n            raw: true,\n          });\n        } else if (!isCurrent) {\n          m.remove(startInputPos);\n        }\n        m.append(appended, masked.currentMaskFlags(flags));\n        m.appendTail(tail);\n        return {\n          index,\n          weight: m.rawInputValue.length,\n          totalInputPositions: m.totalInputPositions(\n            0,\n            Math.max(\n              startInputPos,\n              m.nearestInputPos(m.value.length, DIRECTION.FORCE_LEFT)\n            )\n          ),\n        };\n      });\n\n      // pop masks with longer values first\n      inputs.sort(\n        (i1, i2) =>\n          i2.weight - i1.weight ||\n          i2.totalInputPositions - i1.totalInputPositions\n      );\n      return masked.compiledMasks[inputs[0].index];\n    },\n  };\n  IMask.MaskedDynamic = MaskedDynamic;\n\n  /** Mask pipe source and destination types */\n  const PIPE_TYPE = {\n    MASKED: 'value',\n    UNMASKED: 'unmaskedValue',\n    TYPED: 'typedValue',\n  };\n\n  /** Creates new pipe function depending on mask type, source and destination options */\n  function createPipe(mask) {\n    let from =\n      arguments.length > 1 && arguments[1] !== undefined\n        ? arguments[1]\n        : PIPE_TYPE.MASKED;\n    let to =\n      arguments.length > 2 && arguments[2] !== undefined\n        ? arguments[2]\n        : PIPE_TYPE.MASKED;\n    const masked = createMask(mask);\n    return (value) =>\n      masked.runIsolated((m) => {\n        m[from] = value;\n        return m[to];\n      });\n  }\n\n  /** Pipes value through mask depending on mask type, source and destination options */\n  function pipe(value) {\n    for (\n      var _len = arguments.length,\n        pipeArgs = new Array(_len > 1 ? _len - 1 : 0),\n        _key = 1;\n      _key < _len;\n      _key++\n    ) {\n      pipeArgs[_key - 1] = arguments[_key];\n    }\n    return createPipe(...pipeArgs)(value);\n  }\n  IMask.PIPE_TYPE = PIPE_TYPE;\n  IMask.createPipe = createPipe;\n  IMask.pipe = pipe;\n\n  try {\n    globalThis.IMask = IMask;\n  } catch (e) {}\n\n  exports.ChangeDetails = ChangeDetails;\n  exports.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n  exports.HTMLMaskElement = HTMLMaskElement;\n  exports.InputMask = InputMask;\n  exports.MaskElement = MaskElement;\n  exports.Masked = Masked;\n  exports.MaskedDate = MaskedDate;\n  exports.MaskedDynamic = MaskedDynamic;\n  exports.MaskedEnum = MaskedEnum;\n  exports.MaskedFunction = MaskedFunction;\n  exports.MaskedNumber = MaskedNumber;\n  exports.MaskedPattern = MaskedPattern;\n  exports.MaskedRange = MaskedRange;\n  exports.MaskedRegExp = MaskedRegExp;\n  exports.PIPE_TYPE = PIPE_TYPE;\n  exports.createMask = createMask;\n  exports.createPipe = createPipe;\n  exports['default'] = IMask;\n  exports.pipe = pipe;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n});\n\n// eslint-disable-next-line no-undef\nexport default IMask;\n","<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n} from 'vue';\n// https://imask.js.org/guide.html#getting-started\nimport IMask from '@/vendor/imask-6.4.3.js';\n/**\n * https://stackoverflow.com/questions/25384360/how-to-prevent-moment-js-from-loading-locales-with-webpack\n * Due to this issue with moment (it loads a bunch of unnecessary ./locale)\n * https://github.com/ksloan/moment-mini\n */\nimport moment from 'moment-mini';\nimport { useI18n } from 'vue-i18n';\n// https://air-datepicker.com/docs\n// DO NOT upgrade to the higher version than 3.3.0\nimport AirDatepicker, {\n  type AirDatepickerButton,\n  type AirDatepickerLocale,\n} from 'air-datepicker';\n\nimport {\n  useValidationField,\n  type ValidationRule,\n} from '@/composables/Validation';\nimport { DateDelimiter } from '@/constants/Common';\nimport { BDatePickerView } from '@/constants/Enums';\nimport { lockScrollBody, unlockScrollBody } from '@/helpers/ComponentHelper';\nimport { checkIfISOFormat } from '@/helpers/DateHelper';\nimport { v4 as uuid } from 'uuid';\nimport BErrorMessage from './BErrorMessage.vue';\nimport BLabel from './BLabel.vue';\n\n/**\n * Props\n */\nexport interface BDatePickerProps {\n  inputId?: string;\n  modelValue: any;\n  label?: string;\n  validationRules?: ValidationRule[];\n  placeholder?: string;\n  required?: boolean;\n  requiredErrorMessage?: string;\n  disabled?: boolean;\n  inputCssClass?: string;\n  minDate?: any;\n  maxDate?: any;\n  showHintToday?: boolean;\n  view?: BDatePickerView;\n  hideDetails?: boolean;\n  position?: string;\n}\nconst props = withDefaults(defineProps<BDatePickerProps>(), {\n  inputId: '',\n  label: '',\n  validationRules: undefined,\n  placeholder: '',\n  required: false,\n  requiredErrorMessage: '',\n  disabled: false,\n  inputCssClass: '',\n  minDate: '',\n  maxDate: '',\n  showHintToday: false,\n  view: BDatePickerView.Days,\n  hideDetails: false,\n  position: 'bottom left',\n});\n\n/**\n * Events\n */\nconst emit = defineEmits(['update:modelValue']);\n\n/**\n * Data\n */\nconst { t, locale } = useI18n();\nconst dateFormat = `DD${DateDelimiter}MM${DateDelimiter}YYYY`; // moment's date format\nconst currentDate = new Date();\nlet datePicker: AirDatepicker<HTMLInputElement>;\nlet mask: any;\nconst inputMaskRef = ref<HTMLElement | null>(null);\nconst validateRequired: ValidationRule = {\n  validateRule: (val) => !!val,\n  errorMessage: () =>\n    props.requiredErrorMessage || t('ds.global.field_required'),\n};\nconst selectedDate = ref();\n\n/**\n * Computed\n */\n// The \"Failed to execute 'querySelector' on Document\" error occurs when using querySelector method with an identifier that starts with a digit\nconst id = computed(() => props.inputId || `id-${uuid()}`);\nconst value = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(val) {\n    emit('update:modelValue', val);\n  },\n});\nconst datePickerButtons = computed<AirDatepickerButton[]>(() => [\n  {\n    content: t('ds.components.base.date_picker.buttons.cancel'),\n    className:\n      'ds-bg-transparent focus:ds-ring-1 focus:ds-ring-gray-300 ds-border-inner-primary-f !ds-text-primary-t hover:ds-bg-[#e6f0fe] ds-text-sm ds-leading-4 ds-px-4 ds-mx-1',\n    onClick: (dp) => {\n      dp.clear();\n      nextTick(() => {\n        validate();\n      });\n      dp.hide();\n    },\n  },\n  {\n    content: t('ds.components.base.date_picker.buttons.confirm'),\n    className: `${id.value}-btn-confirm focus:ds-ring-1 focus:ds-ring-1 focus:ds-ring-blue-300 ds-bg-gradient-to-r ds-from-primary-f-stop ds-from-primary-f ds-to-primary-t !ds-text-white enabled:hover:ds-bg-[#0e4bbd] ds-text-sm ds-leading-4 ds-px-4 disabled:ds-from-[#e2e4e8] disabled:ds-to-[#e2e4e8] disabled:ds-text-black/[0.4] ds-mx-1`,\n    onClick: (dp) => {\n      value.value = selectedDate.value !== undefined ? selectedDate.value : '';\n      nextTick(() => {\n        validate();\n      });\n      dp.hide();\n    },\n    attrs: props.required\n      ? {\n          disabled: '',\n        }\n      : undefined,\n  },\n]);\nconst datePickerOptions = computed(() => {\n  const datePickerLocale: AirDatepickerLocale = {\n    days: [\n      t('ds.components.base.date_picker.days.sunday'),\n      t('ds.components.base.date_picker.days.monday'),\n      t('ds.components.base.date_picker.days.tuesday'),\n      t('ds.components.base.date_picker.days.wednesday'),\n      t('ds.components.base.date_picker.days.thursday'),\n      t('ds.components.base.date_picker.days.friday'),\n      t('ds.components.base.date_picker.days.saturday'),\n    ],\n    daysShort: [\n      t('ds.components.base.date_picker.days_short.sunday'),\n      t('ds.components.base.date_picker.days_short.monday'),\n      t('ds.components.base.date_picker.days_short.tuesday'),\n      t('ds.components.base.date_picker.days_short.wednesday'),\n      t('ds.components.base.date_picker.days_short.thursday'),\n      t('ds.components.base.date_picker.days_short.friday'),\n      t('ds.components.base.date_picker.days_short.saturday'),\n    ],\n    daysMin: [\n      t('ds.components.base.date_picker.days_min.sunday'),\n      t('ds.components.base.date_picker.days_min.monday'),\n      t('ds.components.base.date_picker.days_min.tuesday'),\n      t('ds.components.base.date_picker.days_min.wednesday'),\n      t('ds.components.base.date_picker.days_min.thursday'),\n      t('ds.components.base.date_picker.days_min.friday'),\n      t('ds.components.base.date_picker.days_min.saturday'),\n    ],\n    months: [\n      t('ds.components.base.date_picker.months.january'),\n      t('ds.components.base.date_picker.months.february'),\n      t('ds.components.base.date_picker.months.march'),\n      t('ds.components.base.date_picker.months.april'),\n      t('ds.components.base.date_picker.months.may'),\n      t('ds.components.base.date_picker.months.june'),\n      t('ds.components.base.date_picker.months.july'),\n      t('ds.components.base.date_picker.months.august'),\n      t('ds.components.base.date_picker.months.september'),\n      t('ds.components.base.date_picker.months.october'),\n      t('ds.components.base.date_picker.months.november'),\n      t('ds.components.base.date_picker.months.december'),\n    ],\n    monthsShort: [\n      t('ds.components.base.date_picker.months_short.january'),\n      t('ds.components.base.date_picker.months_short.february'),\n      t('ds.components.base.date_picker.months_short.march'),\n      t('ds.components.base.date_picker.months_short.april'),\n      t('ds.components.base.date_picker.months_short.may'),\n      t('ds.components.base.date_picker.months_short.june'),\n      t('ds.components.base.date_picker.months_short.july'),\n      t('ds.components.base.date_picker.months_short.august'),\n      t('ds.components.base.date_picker.months_short.september'),\n      t('ds.components.base.date_picker.months_short.october'),\n      t('ds.components.base.date_picker.months_short.november'),\n      t('ds.components.base.date_picker.months_short.december'),\n    ],\n    today: t('ds.components.base.date_picker.buttons.today'),\n    clear: t('ds.components.base.date_picker.buttons.clear'),\n    dateFormat: 'dd/MM/yyyy',\n    timeFormat: 'HH:mm',\n    firstDay: 1, // Monday\n  };\n  const onSelectDatePicker = ({\n    date,\n  }: {\n    date: Date | Date[];\n    formattedDate: string | string[];\n    datepicker: AirDatepicker;\n  }) => {\n    // 'date' is undefined when clicking 'Clear' button/ deselect the date\n    selectedDate.value = date;\n    if (props.required) {\n      toggleButtonCofirm(!!date);\n    }\n  };\n\n  return {\n    locale: datePickerLocale,\n    selectedDates: [props.modelValue],\n    onSelect: onSelectDatePicker,\n    buttons: [...datePickerButtons.value],\n    showOtherMonths: false,\n    timepicker: false,\n    onlyTimepicker: false,\n    minDate: props.minDate,\n    maxDate: props.maxDate,\n    view: props.view,\n    onHide: onHidePicker,\n    onShow: onShowPicker,\n    navTitles: {\n      days: 'MMMM yyyy',\n    },\n    position: props.position,\n  } as any; // AirDatepickerOptions\n});\nconst vRules = computed(() => {\n  let result: ValidationRule[] = [];\n\n  if (props.required) {\n    result.push(validateRequired);\n  }\n  if (props.validationRules) {\n    result = result.concat(props.validationRules);\n  }\n\n  return result.length ? result : undefined;\n});\nconst inputCssClassValue = computed(() => [\n  'ds-border ds-rounded-lg ds-block ds-w-full ds-text-sm ds-px-3 ds-h-[40px]',\n  {\n    'ds-cursor-not-allowed ds-bg-[#f2f2f2] ds-text-black/[0.4]': props.disabled,\n    'ds-text-black/[0.85]': !props.disabled,\n    'ds-border-error focus:ds-ring-1 focus:ds-ring-error':\n      !validationResult.value.valid,\n    'ds-border-black/[0.1] focus:ds-border-focus focus:ds-ring-1 focus:ds-ring-focus':\n      validationResult.value.valid,\n    '!ds-border-focus ds-ring-1 ds-ring-focus': datePickerVisible.value,\n  },\n  props.inputCssClass,\n]);\nconst isToday = computed(() => {\n  if (!props.modelValue) {\n    return false;\n  }\n  return (\n    currentDate.getDate() === props.modelValue.getDate() &&\n    currentDate.getMonth() === props.modelValue.getMonth() &&\n    currentDate.getFullYear() === props.modelValue.getFullYear()\n  );\n});\nconst inputMaskOptions = computed(() => {\n  const result: any = {\n    mask: IMask.MaskedDate,\n    pattern: dateFormat,\n    lazy: true,\n\n    format: (date: any) => moment(date).format(dateFormat),\n    parse: (str: string) => moment(str, dateFormat),\n\n    blocks: {\n      YYYY: {\n        mask: IMask.MaskedRange,\n        from: 1,\n        to: 9999,\n      },\n      MM: {\n        mask: IMask.MaskedRange,\n        from: 1,\n        to: 12,\n      },\n      DD: {\n        mask: IMask.MaskedRange,\n        from: 1,\n        to: 31,\n      },\n    },\n  };\n\n  if (props.minDate) {\n    result.min = props.minDate;\n  }\n  if (props.maxDate) {\n    result.max = props.maxDate;\n  }\n\n  return result;\n});\nconst datePickerVisible = ref(false);\n\nconst { validate, validationResult } = useValidationField(\n  id.value,\n  value,\n  vRules.value,\n);\n\n/**\n * Watch\n */\nwatch(\n  () => props.modelValue,\n  () => {\n    // Make sure to update value once\n    if (checkIfModelNeedToSync(datePicker.selectedDates[0])) {\n      if (props.modelValue) {\n        datePicker.selectDate(props.modelValue);\n      } else {\n        datePicker.clear();\n      }\n    }\n    if (checkIfModelNeedToSync(getInputMaskDate())) {\n      mask.value = formatDate(props.modelValue);\n    }\n  },\n  { deep: true },\n);\nwatch(\n  [\n    locale,\n    () => props.position,\n    () => props.minDate,\n    () => props.maxDate,\n    () => props.view,\n  ],\n  () => {\n    datePicker.update(datePickerOptions.value);\n  },\n);\n\n/**\n * Methods\n */\nconst formatDate = (date: string | Date) =>\n  checkIfISOFormat(date) ? moment(date).format(dateFormat) : date;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst onHidePicker = () => {\n  datePickerVisible.value = false;\n  unlockScrollBody();\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst onShowPicker = () => {\n  datePickerVisible.value = true;\n  if (props.modelValue) {\n    datePicker.selectDate(props.modelValue);\n  } else {\n    datePicker.clear();\n  }\n  lockScrollBody();\n};\nconst onAccept = () => {\n  if (!mask.unmaskedValue) {\n    emit('update:modelValue', '');\n  }\n};\nconst onComplete = () => {\n  const date = getInputMaskDate();\n  return date ? emit('update:modelValue', date) : emit('update:modelValue', '');\n};\nconst onBlur = () => {\n  const date = getInputMaskDate();\n  validate();\n  if (!checkIfModelNeedToSync(date)) {\n    return;\n  }\n  emit('update:modelValue', date === undefined ? '' : date);\n};\nconst checkIfModelNeedToSync = (date: any) => {\n  const ruleEngine = [\n    !props.modelValue && date,\n    !date && props.modelValue,\n    props.modelValue && date && props.modelValue.getTime() !== date.getTime(),\n  ];\n\n  return ruleEngine.some((r) => r);\n};\nconst getInputMaskDate = () => {\n  const arr = mask.value.split('/');\n  const dateStr = `${arr[2]}-${arr[1]}-${arr[0]}`;\n  // Check if string is in ISO format\n  if (moment(dateStr, moment.ISO_8601, true).isValid()) {\n    return new Date(dateStr);\n  }\n\n  return undefined;\n};\nconst toggleButtonCofirm = (enabled: boolean) => {\n  const btnEl = document.querySelector(`.${id.value}-btn-confirm`);\n  if (enabled) {\n    btnEl?.removeAttribute('disabled');\n  } else {\n    btnEl?.setAttribute('disabled', '');\n  }\n};\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  // Picker\n  datePicker = new AirDatepicker<HTMLInputElement>(\n    `#${id.value}Picker`,\n    datePickerOptions.value,\n  );\n  // Input mask\n  mask = IMask(inputMaskRef.value!, inputMaskOptions.value);\n  mask.value = formatDate(props.modelValue);\n  mask.on('accept', onAccept);\n  mask.on('complete', onComplete);\n});\nonBeforeUnmount(() => {\n  unlockScrollBody();\n});\n</script>\n\n<template>\n  <div>\n    <b-label :id=\"id\" :label=\"label\" :required=\"required\" />\n    <div class=\"ds-relative\">\n      <input\n        :id=\"id\"\n        ref=\"inputMaskRef\"\n        :class=\"inputCssClassValue\"\n        :disabled=\"disabled\"\n        :placeholder=\"placeholder\"\n        class=\"ds-relative ds-z-[2] ds-drop-shadow-light\"\n        @blur=\"onBlur\"\n      />\n      <input\n        :id=\"`${id}Picker`\"\n        :class=\"inputCssClassValue\"\n        :disabled=\"disabled\"\n        class=\"ds-absolute ds-top-0 ds-z-[1]\"\n        readonly\n      />\n\n      <label\n        v-if=\"showHintToday && isToday\"\n        :for=\"id\"\n        class=\"ds-absolute ds-left-[98px] ds-top-2.5 ds-z-[3] ds-text-sm\"\n      >\n        {{ `(${$t('ds.components.base.date_picker.today')})` }}\n      </label>\n\n      <label\n        :for=\"`${id}Picker`\"\n        class=\"ds-absolute ds-right-3 ds-top-2 ds-z-[3]\"\n      >\n        <i\n          :class=\"[\n            props.disabled ? 'ds-text-black/[0.4]' : 'ds-text-black/[0.85]',\n          ]\"\n          class=\"fa-solid fa-calendar-lines\"\n        ></i>\n      </label>\n    </div>\n\n    <b-error-message\n      v-if=\"!hideDetails\"\n      :error-message=\"validationResult.errorMessage()\"\n      class=\"ds-mt-1\"\n      prepend-icon=\"fa-solid fa-circle-exclamation\"\n    />\n  </div>\n</template>\n"],"names":["global","factory","this","exports","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","key","i","IMask","el","opts","ChangeDetails","details","isString","str","DIRECTION","forceDirection","direction","escapeRegExp","normalizePrepare","prep","objectIncludes","b","a","arrA","arrB","dateA","dateB","regexpA","regexpB","keys","ActionDetails","value","cursorPos","oldValue","oldSelection","ContinuousTailDetails","from","stop","tail","masked","state","beforePos","shiftChar","Masked","fromPos","toPos","ch","flags","checkTail","consistentState","consistentTail","appended","beforeTailState","tailDetails","ci","d","fn","rawInput","ret","start","deleteCount","inserted","removeDirection","tailPos","eagerRemove","oldRawValue","startChangePos","valLength","mask","tval","v","maskedClass","createMask","MaskedClass","_excluded$4","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","parent","isOptional","placeholderChar","displayChar","lazy","eager","maskOpts","minPos","maxPos","boundPos","PatternFixedDefinition","appendEager","isResolved","_excluded$3","ChunksTailDetails","chunks","tailChunk","lastChunk","extendLast","firstTailChunk","chunk","lastBlockIter","chunkBlock","phDetails","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","pos","offset","index","s","_this$block","MaskedRegExp","_excluded$2","MaskedPattern","defs","pattern","unmaskingBlock","optionalBlock","_defs$char","_defs$char2","p","bNames","bName","maskedBlock","char","isInput","def","_blocks","maskedState","bi","unmaskedValue","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","block","blockDetails","skip","chunkTail","bFromPos","bToPos","blockChunk","input","_","blockIndex","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","name","indices","gi","MaskedRange","maxLength","fromStr","toStr","sameCharsCount","minstr","maxstr","placeholder","num","nextVal","MaskedDate","blocks","bk","date","day","month","year","MaskElement","end","handlers","HTMLMaskElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","event","handler","HTMLContenteditableMaskElement","root","selection","anchorOffset","focusOffset","range","_excluded$1","InputMask","_this$masked","val","ev","_len","_key","listeners","l","newUnmaskedValue","newValue","newDisplayValue","isChanged","restOpts","updateMask","updateOpts","hIndex","MaskedEnum","MaskedNumber","mid","parts","prepCh","to","extendOnSeparators","count","slice","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","validnum","formatted","match","sign","zeros","dropFractional","n","MaskedFunction","_excluded","_excluded2","MaskedDynamic","m","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","compiledMasks","currentMaskRef","currentMask","mi","overwrite","skipInvalid","_mask$mi","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","i1","i2","PIPE_TYPE","createPipe","pipe","pipeArgs","IMask$1","t","locale","useI18n","dateFormat","DateDelimiter","currentDate","datePicker","inputMaskRef","ref","validateRequired","selectedDate","id","computed","uuid","emit","datePickerButtons","dp","nextTick","validate","datePickerOptions","datePickerLocale","onSelectDatePicker","toggleButtonCofirm","onHidePicker","onShowPicker","vRules","result","inputCssClassValue","validationResult","datePickerVisible","isToday","inputMaskOptions","moment","useValidationField","watch","checkIfModelNeedToSync","getInputMaskDate","formatDate","checkIfISOFormat","unlockScrollBody","lockScrollBody","onAccept","onComplete","onBlur","r","arr","dateStr","enabled","btnEl","onMounted","AirDatepicker","onBeforeUnmount"],"mappings":"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"}