{"version":3,"file":"BCheckbox-14ee273c.js","sources":["../../src/components/BCheckbox.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { BCheckboxSize } from '@/constants/Enums';\nimport { v4 as uuid } from 'uuid';\nimport { computed } from 'vue';\n\n/**\n * Props\n */\nexport interface BCheckboxProps {\n  inputId?: string;\n  inputCssClass?: string;\n  modelValue?: boolean | Array<string | number>;\n  label?: string;\n  /**\n   * Clicking on label will not check on checkbox.\n   */\n  labelOrphan?: boolean;\n  disabled?: boolean;\n  size?: `${BCheckboxSize}`;\n}\nconst props = withDefaults(defineProps<BCheckboxProps>(), {\n  inputId: '',\n  inputCssClass: '',\n  modelValue: false,\n  label: '',\n  labelOrphan: false,\n  disabled: false,\n  size: BCheckboxSize.Medium,\n});\n\n/**\n * Events\n */\nconst emit = defineEmits(['update:modelValue']);\n\nconst siblingCssClass = `\n  peer-checked:ds-text-transparent peer-checked:ds-bg-gradient-to-r peer-checked:ds-from-primary-f-stop peer-checked:ds-from-primary-f peer-checked:ds-to-primary-t\n  peer-checked:after:ds-opacity-100\n`;\n\n/**\n * Computed\n */\nconst id = computed(() => props.inputId || `id-${uuid()}`);\nconst value = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(val) {\n    emit('update:modelValue', val);\n  },\n});\nconst cssClassValue = computed(() => {\n  let result = ``;\n\n  switch (props.size) {\n    case BCheckboxSize.Small:\n      result += `size-sm `;\n      break;\n    case BCheckboxSize.Medium:\n    default:\n      result += ` `;\n      break;\n  }\n\n  return result;\n});\nconst inputCssClassValue = computed(() => [\n  props.inputCssClass,\n  {\n    'ds-cursor-not-allowed': props.disabled,\n  },\n]);\n\n/**\n * Customize checkbox styles, need to hide input tag and style an label which stands for that input\n * Example: https://codepen.io/AllThingsSmitty/pen/WjZVjo\n */\n</script>\n<template>\n  <div :class=\"cssClassValue\" class=\"b-checkbox ds-flex ds-items-center\">\n    <input\n      :id=\"id\"\n      v-model=\"value\"\n      :class=\"inputCssClassValue\"\n      :disabled=\"disabled\"\n      :value=\"$attrs.value || value\"\n      class=\"ds-peer ds-invisible\"\n      type=\"checkbox\"\n    />\n    <label :class=\"siblingCssClass\" :for=\"id\" class=\"input-label\" />\n    <label\n      v-if=\"label || $slots.default\"\n      :for=\"labelOrphan ? undefined : id\"\n      class=\"ds-ml-2 ds-text-sm ds-font-medium ds-text-gray-900\"\n    >\n      <slot>\n        {{ props.label }}\n      </slot>\n    </label>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.b-checkbox {\n  position: relative;\n\n  input {\n    width: theme('width.6');\n    height: theme('height.6');\n    min-width: theme('width.6');\n    min-height: theme('height.6');\n  }\n\n  .input-label {\n    background-color: theme('colors.white');\n    border: 1px solid theme('colors.gray.200');\n    border-radius: theme('borderRadius.lg');\n    cursor: pointer;\n    width: theme('width.6');\n    height: theme('height.6');\n    left: 0;\n    position: absolute;\n    top: 0;\n\n    &:after {\n      border: 3px solid #fff;\n      border-top: none;\n      border-right: none;\n      content: '';\n      height: 7px;\n      left: 5px;\n      // opacity: 0;\n      position: absolute;\n      top: 7px;\n      transform: rotate(-45deg);\n      width: theme('width.3');\n    }\n  }\n\n  &.size-sm {\n    input {\n      width: theme('width.5');\n      height: theme('height.5');\n      min-width: theme('width.5');\n      min-height: theme('height.5');\n    }\n    .input-label {\n      width: theme('width.5');\n      height: theme('height.5');\n\n      &:after {\n        border: 2.5px solid white;\n        border-top: none;\n        border-right: none;\n        left: 3px;\n        top: 4.5px;\n      }\n    }\n  }\n\n  // input[type='checkbox'] {\n  //   visibility: hidden;\n  // }\n\n  // input[type='checkbox']:checked + .input-label {\n  //   background-color: #66bb6a;\n  //   border-color: #66bb6a;\n  // }\n\n  // input[type='checkbox']:checked + .input-label:after {\n  //   opacity: 1;\n  // }\n}\n</style>\n"],"names":["siblingCssClass","id","computed","props","uuid","value","val","emit","cssClassValue","result","BCheckboxSize","inputCssClassValue"],"mappings":"yTAmCMA,EAAkB;AAAA;AAAA;AAAA,2SAQlBC,EAAKC,EAAS,IAAMC,EAAM,SAAW,MAAMC,GAAM,EAAE,EACnDC,EAAQH,EAAS,CACrB,KAAM,CACJ,OAAOC,EAAM,UACf,EACA,IAAIG,EAAK,CACPC,EAAK,oBAAqBD,CAAG,CAC/B,CAAA,CACD,EACKE,EAAgBN,EAAS,IAAM,CACnC,IAAIO,EAAS,GAEb,OAAQN,EAAM,KAAM,CAClB,KAAKO,EAAc,MACPD,GAAA,WACV,MACF,KAAKC,EAAc,OACnB,QACYD,GAAA,IACV,KACJ,CAEO,OAAAA,CAAA,CACR,EACKE,EAAqBT,EAAS,IAAM,CACxCC,EAAM,cACN,CACE,wBAAyBA,EAAM,QACjC,CAAA,CACD"}