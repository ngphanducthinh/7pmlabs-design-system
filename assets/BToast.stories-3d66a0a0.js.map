{"version":3,"file":"BToast.stories-3d66a0a0.js","sources":["../../src/components/BToast/BToastItem.vue","../../src/components/BToast/BToast.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { BToastItemType } from '@/constants/Enums';\nimport { computed, ref } from 'vue';\n\n/**\n * Props\n */\nexport interface Props {\n  text?: string;\n  icon?: string;\n  type?: `${BToastItemType}`;\n  hideClose?: boolean;\n}\nconst props = withDefaults(defineProps<Props>(), {\n  text: '',\n  icon: '',\n  type: BToastItemType.Default,\n  hideClose: false,\n});\n\n/**\n * Events\n */\nconst emit = defineEmits(['close']);\n\n/**\n * Data\n */\nconst cssClass = computed<string>(() => {\n  let result = `ds-flex ds-items-center ds-w-80 ds-px-4 ds-py-5 ds-rounded-lg ds-shadow-2xl `;\n\n  switch (props.type) {\n    case BToastItemType.Success:\n      result += `ds-bg-[#00a86b] ds-text-white `;\n      break;\n    case BToastItemType.Error:\n      result += `ds-bg-red-600 ds-text-white `;\n      break;\n    case BToastItemType.Default:\n    default:\n      result += `ds-bg-white ds-text-primary-t `;\n  }\n\n  return result;\n});\nconst defaultIcon = ref<Record<BToastItemType, string>>({\n  success: 'fa-solid fa-circle-check',\n  error: 'fa-solid fa-circle-exclamation',\n  default: '',\n});\n</script>\n\n<template>\n  <div :class=\"cssClass\">\n    <div\n      v-if=\"props.icon || defaultIcon[props.type]\"\n      class=\"ds-flex ds-flex-initial ds-items-center ds-pr-1\"\n    >\n      <i :class=\"props.icon || defaultIcon[props.type]\" class=\"ds-text-lg\" />\n    </div>\n    <div class=\"ds-flex-auto ds-text-sm ds-font-normal\" v-html=\"text\" />\n    <div\n      v-if=\"!props.hideClose\"\n      class=\"ds-flex ds-flex-initial ds-cursor-pointer ds-items-center ds-pl-1\"\n      @click=\"emit('close')\"\n    >\n      <i class=\"fa-solid fa-xmark ds-text-lg\"></i>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { BToastItemModel } from '@/types';\nimport { computed } from 'vue';\nimport BToastItem from './BToastItem.vue';\n\n/**\n * Props\n */\nexport interface Props {\n  modelValue: BToastItemModel[];\n}\nconst props = withDefaults(defineProps<Props>(), {});\n\n/**\n * Data\n */\nconst value = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(val) {\n    emit('update:modelValue', val);\n  },\n});\n\n/**\n * Events\n */\nconst emit = defineEmits(['update:modelValue']);\n\n/**\n * Methods\n */\nconst onCloseToastItem = (i: number) => {\n  value.value.splice(i, 1);\n};\n</script>\n\n<template>\n  <div\n    v-show=\"value.length > 0\"\n    class=\"ds-fixed ds-right-4 ds-top-4 ds-z-[110]\"\n  >\n    <TransitionGroup\n      enter-active-class=\"ds-transition-all ds-duration-300 ds-ease-in-out\"\n      enter-from-class=\"ds-opacity-0\"\n      enter-to-class=\"ds-opacity-1\"\n      leave-active-class=\"ds-transition-all ds-duration-300 ds-ease-in-out\"\n      leave-from-class=\"ds-opacity-1\"\n      leave-to-class=\"ds-opacity-0\"\n    >\n      <BToastItem\n        v-for=\"(toastItem, index) in value\"\n        :key=\"`toastItem${index}`\"\n        :text=\"toastItem.text\"\n        :icon=\"toastItem.icon\"\n        :type=\"toastItem.type\"\n        class=\"ds-my-2\"\n        @close=\"onCloseToastItem(index)\"\n      />\n    </TransitionGroup>\n  </div>\n</template>\n"],"names":["cssClass","computed","result","props","BToastItemType","defaultIcon","ref","value","val","emit","onCloseToastItem","i"],"mappings":"4iBA4BMA,EAAWC,EAAiB,IAAM,CACtC,IAAIC,EAAS,+EAEb,OAAQC,EAAM,KAAM,CAClB,KAAKC,EAAe,QACRF,GAAA,iCACV,MACF,KAAKE,EAAe,MACRF,GAAA,+BACV,MACF,KAAKE,EAAe,QACpB,QACYF,GAAA,gCACd,CAEO,OAAAA,CAAA,CACR,EACKG,EAAcC,EAAoC,CACtD,QAAS,2BACT,MAAO,iCACP,QAAS,EAAA,CACV,uoCCjCKC,EAAQN,EAAS,CACrB,KAAM,CACJ,OAAOE,EAAM,UACf,EACA,IAAIK,EAAK,CACPC,EAAK,oBAAqBD,CAAG,CAC/B,CAAA,CACD,EAUKE,EAAoBC,GAAc,CAChCJ,EAAA,MAAM,OAAOI,EAAG,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}