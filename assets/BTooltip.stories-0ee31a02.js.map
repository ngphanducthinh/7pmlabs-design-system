{"version":3,"file":"BTooltip.stories-0ee31a02.js","sources":["../../src/components/BTooltip.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { BTooltipOpenEvent, BTooltipPosition } from '@/constants/Enums';\nimport { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue';\n\n/**\n * Props\n */\nexport interface BTooltipProps {\n  modelValue?: boolean;\n  /**\n   * Position of opened tooltip compare to its toggle.\n   */\n  position?: `${BTooltipPosition}`;\n  /**\n   * Event to open tooltip.\n   */\n  openEvent?: `${BTooltipOpenEvent}`;\n}\nconst props = withDefaults(defineProps<BTooltipProps>(), {\n  modelValue: false,\n  position: BTooltipPosition.Top,\n  openEvent: BTooltipOpenEvent.Hover,\n});\n\n/**\n * Events\n */\nconst emit = defineEmits<{\n  'update:modelValue': [value: boolean];\n}>();\n\n/**\n * Data\n */\nconst toggleRef = ref<HTMLDivElement | null>(null);\nconst contentRef = ref<HTMLDivElement | null>(null);\nconst mValue = ref(false);\nconst value = computed({\n  get() {\n    return props.modelValue !== undefined ? props.modelValue : mValue.value;\n  },\n  set(val: boolean) {\n    if (props.modelValue !== undefined) {\n      emit('update:modelValue', val);\n    } else {\n      mValue.value = val;\n    }\n  },\n});\n\n/**\n * Watch\n */\nwatch(\n  () => props.position,\n  () => {\n    resetContentPosition();\n    ensureContentPosition();\n  },\n);\nwatch(\n  () => props.openEvent,\n  () => {\n    clearEventListeners();\n    ensureEventListeners();\n  },\n);\n\n/**\n * Methods\n */\nconst onClick = () => {\n  value.value = !value.value;\n};\nconst onFocus = () => {\n  value.value = true;\n};\nconst onFocusOut = () => {\n  value.value = false;\n};\nconst onHover = () => {\n  value.value = true;\n};\nconst onHoverOut = () => {\n  value.value = false;\n};\nconst resetContentPosition = () => {\n  if (!contentRef.value) {\n    return;\n  }\n  contentRef.value.style.top = '';\n  contentRef.value.style.right = '';\n  contentRef.value.style.bottom = '';\n  contentRef.value.style.left = '';\n};\nconst ensureContentPosition = () => {\n  if (!contentRef.value) {\n    return;\n  }\n\n  switch (props.position) {\n    case BTooltipPosition.Bottom:\n      contentRef.value.style.top = '4px';\n      break;\n    case BTooltipPosition.Top:\n    default:\n      contentRef.value.style.bottom = '24px';\n      break;\n  }\n};\nconst ensureEventListeners = () => {\n  switch (props.openEvent) {\n    case BTooltipOpenEvent.Click:\n      toggleRef.value?.addEventListener('click', onClick);\n      break;\n    case BTooltipOpenEvent.Focus:\n      toggleRef.value?.addEventListener('focus', onFocus);\n      toggleRef.value?.addEventListener('focusout', onFocusOut);\n      break;\n    case BTooltipOpenEvent.Hover:\n    default:\n      toggleRef.value?.addEventListener('mouseover', onHover);\n      toggleRef.value?.addEventListener('mouseleave', onHoverOut);\n      break;\n  }\n};\nconst clearEventListeners = () => {\n  toggleRef.value?.removeEventListener('click', onClick);\n  toggleRef.value?.removeEventListener('focus', onFocus);\n  toggleRef.value?.removeEventListener('mouseover', onHover);\n  toggleRef.value?.removeEventListener('mouseleave', onHoverOut);\n};\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  ensureEventListeners();\n  ensureContentPosition();\n});\nonBeforeUnmount(() => {\n  clearEventListeners();\n});\n</script>\n\n<template>\n  <div ref=\"toggleRef\" class=\"ds-inline\">\n    <slot name=\"toggle\"> </slot>\n  </div>\n\n  <div v-show=\"value\" class=\"ds-relative\">\n    <div\n      ref=\"contentRef\"\n      class=\"ds-absolute ds-z-10 ds-inline-block ds-rounded-lg ds-bg-black/[0.65] ds-px-3 ds-py-2 ds-text-sm ds-font-medium ds-text-white ds-shadow-sm ds-transition-opacity ds-duration-300\"\n    >\n      <slot></slot>\n      <div class=\"tooltip-arrow\" data-popper-arrow></div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.tooltip-arrow {\n  position: absolute;\n  left: 0;\n  transform: translate3d(59.5px, 0px, 0px);\n}\n</style>\n"],"names":["toggleRef","ref","contentRef","mValue","value","computed","props","val","emit","watch","resetContentPosition","ensureContentPosition","clearEventListeners","ensureEventListeners","onClick","onFocus","onFocusOut","onHover","onHoverOut","BTooltipPosition","BTooltipOpenEvent","_a","_b","_c","_d","_e","onMounted","onBeforeUnmount"],"mappings":"+jBAkCMA,EAAYC,EAA2B,IAAI,EAC3CC,EAAaD,EAA2B,IAAI,EAC5CE,EAASF,EAAI,EAAK,EAClBG,EAAQC,EAAS,CACrB,KAAM,CACJ,OAAOC,EAAM,aAAe,OAAYA,EAAM,WAAaH,EAAO,KACpE,EACA,IAAII,EAAc,CACZD,EAAM,aAAe,OACvBE,EAAK,oBAAqBD,CAAG,EAE7BJ,EAAO,MAAQI,CAEnB,CAAA,CACD,EAKDE,EACE,IAAMH,EAAM,SACZ,IAAM,CACiBI,IACCC,GACxB,CAAA,EAEFF,EACE,IAAMH,EAAM,UACZ,IAAM,CACgBM,IACCC,GACvB,CAAA,EAMF,MAAMC,EAAU,IAAM,CACdV,EAAA,MAAQ,CAACA,EAAM,KAAA,EAEjBW,EAAU,IAAM,CACpBX,EAAM,MAAQ,EAAA,EAEVY,EAAa,IAAM,CACvBZ,EAAM,MAAQ,EAAA,EAEVa,EAAU,IAAM,CACpBb,EAAM,MAAQ,EAAA,EAEVc,EAAa,IAAM,CACvBd,EAAM,MAAQ,EAAA,EAEVM,EAAuB,IAAM,CAC5BR,EAAW,QAGLA,EAAA,MAAM,MAAM,IAAM,GAClBA,EAAA,MAAM,MAAM,MAAQ,GACpBA,EAAA,MAAM,MAAM,OAAS,GACrBA,EAAA,MAAM,MAAM,KAAO,GAAA,EAE1BS,EAAwB,IAAM,CAC9B,GAACT,EAAW,MAIhB,OAAQI,EAAM,SAAU,CACtB,KAAKa,EAAiB,OACTjB,EAAA,MAAM,MAAM,IAAM,MAC7B,MACF,KAAKiB,EAAiB,IACtB,QACajB,EAAA,MAAM,MAAM,OAAS,OAChC,KACJ,CAAA,EAEIW,EAAuB,IAAM,eACjC,OAAQP,EAAM,UAAW,CACvB,KAAKc,EAAkB,OACXC,EAAArB,EAAA,QAAA,MAAAqB,EAAO,iBAAiB,QAASP,GAC3C,MACF,KAAKM,EAAkB,OACXE,EAAAtB,EAAA,QAAA,MAAAsB,EAAO,iBAAiB,QAASP,IACjCQ,EAAAvB,EAAA,QAAA,MAAAuB,EAAO,iBAAiB,WAAYP,GAC9C,MACF,KAAKI,EAAkB,MACvB,SACYI,EAAAxB,EAAA,QAAA,MAAAwB,EAAO,iBAAiB,YAAaP,IACrCQ,EAAAzB,EAAA,QAAA,MAAAyB,EAAO,iBAAiB,aAAcP,GAChD,KACJ,CAAA,EAEIN,EAAsB,IAAM,cACtBS,EAAArB,EAAA,QAAA,MAAAqB,EAAO,oBAAoB,QAASP,IACpCQ,EAAAtB,EAAA,QAAA,MAAAsB,EAAO,oBAAoB,QAASP,IACpCQ,EAAAvB,EAAA,QAAA,MAAAuB,EAAO,oBAAoB,YAAaN,IACxCO,EAAAxB,EAAA,QAAA,MAAAwB,EAAO,oBAAoB,aAAcN,EAAU,EAM/D,OAAAQ,EAAU,IAAM,CACOb,IACCF,GAAA,CACvB,EACDgB,EAAgB,IAAM,CACAf,GAAA,CACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}