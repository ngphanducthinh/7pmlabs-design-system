{"version":3,"file":"BCurrencyField.stories-cd28e6f2.js","sources":["../../src/components/BCurrencyField.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport BLabel from '@/components/BLabel.vue';\nimport type { ValidationRule } from '@/composables/Validation';\nimport { useValidationField } from '@/composables/Validation';\nimport { computed, onMounted, ref, watch } from 'vue';\nimport { v4 as uuid } from 'uuid';\nimport BErrorMessage from '@/components/BErrorMessage.vue';\nimport { useI18n } from 'vue-i18n';\nimport IMask from '@/vendor/imask-7.1.3.js';\n\n/**\n * Props\n */\nexport interface BCurrencyFieldProps {\n  inputId?: string;\n  inputCssClass?: string;\n  modelValue: number;\n  label?: string;\n  /**\n   * FontAwesome v6.1.0 - Solid.\n   */\n  prependIcon?: string;\n  /**\n   * Hide prepended icon.\n   */\n  hidePrependIcon?: boolean;\n  /**\n   * FontAwesome v6.1.0 - Solid.\n   */\n  appendIcon?: string;\n  /**\n   * Hide appended icon.\n   */\n  hideAppendIcon?: boolean;\n  /**\n   * Array of custom validation rules.\n   */\n  validationRules?: ValidationRule[];\n  placeholder?: string;\n  autocomplete?: boolean;\n  /**\n   * Validate if the field is left empty.\n   */\n  required?: boolean;\n  requiredErrorMessage?: string;\n  disabled?: boolean;\n  /**\n   * Hide the validation error message.\n   */\n  hideDetails?: boolean;\n}\nconst props = withDefaults(defineProps<BCurrencyFieldProps>(), {\n  inputId: '',\n  inputCssClass: '',\n  label: '',\n  prependIcon: '',\n  hidePrependIcon: false,\n  appendIcon: '',\n  hideAppendIcon: false,\n  validationRules: undefined,\n  placeholder: '',\n  autocomplete: false,\n  required: false,\n  requiredErrorMessage: '',\n  disabled: false,\n  readonly: false,\n  hideDetails: false,\n});\n\n/**\n * Events\n */\nconst emit = defineEmits([\n  'click:prepend',\n  'click:append',\n  'press:enter',\n  'update:modelValue',\n]);\n\n/**\n * Data\n */\nlet mask: any;\nconst { t, locale } = useI18n();\nconst inputRef = ref<HTMLInputElement | null>(null);\nconst validateRequired: ValidationRule = {\n  validateRule: (val: string) => !!(val && val?.trim()),\n  errorMessage: () =>\n    props.requiredErrorMessage || t('ds.global.field_required'),\n};\nconst id = computed(() => props.inputId || `id-${uuid()}`);\nconst value = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(val) {\n    emit('update:modelValue', val);\n  },\n});\nconst inputCssClassValue = computed(() => [\n  {\n    'ds-pl-9': props.prependIcon,\n    'ds-pr-9': props.appendIcon,\n    'ds-cursor-not-allowed ds-bg-[#f2f2f2] ds-text-black/[0.4]': props.disabled,\n    'ds-text-black/[0.85]': !props.disabled,\n    'ds-border-error focus:ds-ring-1 focus:ds-ring-error':\n      !validationResult.value.valid,\n    'ds-border-black/[0.1] focus:ds-border-focus focus:ds-ring-1 focus:ds-ring-focus':\n      validationResult.value.valid,\n  },\n  props.inputCssClass,\n]);\nconst vRules = computed(() => {\n  let result: ValidationRule[] = [];\n\n  if (props.required) {\n    result.push(validateRequired);\n  }\n  if (props.validationRules) {\n    result = result.concat(props.validationRules);\n  }\n\n  return result.length ? result : undefined;\n});\nconst maskOptions = computed(() =>\n  locale.value === 'en-US'\n    ? {\n        mask: '$num',\n        blocks: {\n          num: {\n            mask: Number,\n            thousandsSeparator: ' ',\n          },\n        },\n      }\n    : [\n        { mask: '' },\n        {\n          mask: 'num VND',\n          lazy: false,\n          blocks: {\n            num: {\n              mask: Number,\n              thousandsSeparator: ' ',\n            },\n          },\n        },\n      ],\n);\n\nconst { validate, validationResult } = useValidationField(\n  id.value,\n  value,\n  vRules.value,\n);\n\n/**\n * Watch\n */\nwatch(locale, () => {\n  initMask();\n});\n\n/**\n * Methods\n */\nconst onClickPrependIcon = () => {\n  emit('click:prepend');\n};\nconst onClickAppendIcon = () => {\n  emit('click:append');\n};\nconst onKeyUp = () => {\n  validate();\n};\nconst onKeyUpEnter = () => {\n  emit('press:enter');\n};\nconst onAccept = () => {\n  value.value = +mask.unmaskedValue;\n};\nconst initMask = () => {\n  if (mask) {\n    mask.destroy();\n  }\n  mask = IMask(inputRef.value!, maskOptions.value);\n  mask.on('accept', onAccept);\n};\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  initMask();\n});\n</script>\n\n<template>\n  <div>\n    <BLabel :id=\"id\" :label=\"label\" :required=\"required\" />\n    <div class=\"ds-relative\">\n      <div\n        v-if=\"prependIcon\"\n        v-show=\"!hidePrependIcon\"\n        class=\"ds-absolute ds-left-3 ds-top-0 ds-z-[1] ds-flex ds-h-full ds-cursor-pointer ds-items-center hover:ds-text-primary-t\"\n      >\n        <span\n          :id=\"`${id}prependIcon`\"\n          :class=\"prependIcon\"\n          @click=\"onClickPrependIcon\"\n        >\n        </span>\n      </div>\n      <input\n        :id=\"id\"\n        ref=\"inputRef\"\n        :autocomplete=\"props.autocomplete ? 'on' : 'off'\"\n        :class=\"inputCssClassValue\"\n        :disabled=\"props.disabled\"\n        :placeholder=\"props.placeholder\"\n        :readonly=\"props.readonly\"\n        class=\"ds-block ds-h-[40px] ds-w-full ds-rounded-lg ds-border ds-px-3 ds-text-sm ds-drop-shadow-light\"\n        @keyup=\"onKeyUp\"\n        @keyup.enter=\"onKeyUpEnter\"\n      />\n      <div\n        v-if=\"appendIcon\"\n        v-show=\"!hideAppendIcon\"\n        class=\"ds-absolute ds-right-3 ds-top-0 ds-z-[1] ds-flex ds-h-full ds-cursor-pointer ds-items-center hover:ds-text-primary-t\"\n      >\n        <span\n          :id=\"`${id}appendIcon`\"\n          :class=\"appendIcon\"\n          @click=\"onClickAppendIcon\"\n        >\n        </span>\n      </div>\n    </div>\n\n    <BErrorMessage\n      v-if=\"!hideDetails\"\n      :error-message=\"validationResult.errorMessage()\"\n      class=\"ds-mt-1\"\n    />\n  </div>\n</template>\n"],"names":["mask","t","locale","useI18n","inputRef","ref","validateRequired","val","props","id","computed","uuid","value","emit","inputCssClassValue","validationResult","vRules","result","maskOptions","validate","useValidationField","watch","initMask","onClickPrependIcon","onClickAppendIcon","onKeyUp","onKeyUpEnter","onAccept","IMask","onMounted"],"mappings":"05CAkFI,IAAAA,EACJ,KAAM,CAAE,EAAAC,EAAG,OAAAC,CAAO,EAAIC,EAAQ,EACxBC,EAAWC,EAA6B,IAAI,EAC5CC,EAAmC,CACvC,aAAeC,GAAgB,CAAC,EAAEA,IAAOA,GAAA,MAAAA,EAAK,SAC9C,aAAc,IACZC,EAAM,sBAAwBP,EAAE,0BAA0B,CAAA,EAExDQ,EAAKC,EAAS,IAAMF,EAAM,SAAW,MAAMG,GAAM,EAAE,EACnDC,EAAQF,EAAS,CACrB,KAAM,CACJ,OAAOF,EAAM,UACf,EACA,IAAID,EAAK,CACPM,EAAK,oBAAqBN,CAAG,CAC/B,CAAA,CACD,EACKO,EAAqBJ,EAAS,IAAM,CACxC,CACE,UAAWF,EAAM,YACjB,UAAWA,EAAM,WACjB,4DAA6DA,EAAM,SACnE,uBAAwB,CAACA,EAAM,SAC/B,sDACE,CAACO,EAAiB,MAAM,MAC1B,kFACEA,EAAiB,MAAM,KAC3B,EACAP,EAAM,aAAA,CACP,EACKQ,EAASN,EAAS,IAAM,CAC5B,IAAIO,EAA2B,CAAA,EAE/B,OAAIT,EAAM,UACRS,EAAO,KAAKX,CAAgB,EAE1BE,EAAM,kBACCS,EAAAA,EAAO,OAAOT,EAAM,eAAe,GAGvCS,EAAO,OAASA,EAAS,MAAA,CACjC,EACKC,EAAcR,EAAS,IAC3BR,EAAO,QAAU,QACb,CACE,KAAM,OACN,OAAQ,CACN,IAAK,CACH,KAAM,OACN,mBAAoB,GACtB,CACF,CAAA,EAEF,CACE,CAAE,KAAM,EAAG,EACX,CACE,KAAM,UACN,KAAM,GACN,OAAQ,CACN,IAAK,CACH,KAAM,OACN,mBAAoB,GACtB,CACF,CACF,CACF,CAAA,EAGA,CAAE,SAAAiB,EAAU,iBAAAJ,CAAA,EAAqBK,EACrCX,EAAG,MACHG,EACAI,EAAO,KAAA,EAMTK,EAAMnB,EAAQ,IAAM,CACToB,GAAA,CACV,EAKD,MAAMC,EAAqB,IAAM,CAC/BV,EAAK,eAAe,CAAA,EAEhBW,EAAoB,IAAM,CAC9BX,EAAK,cAAc,CAAA,EAEfY,EAAU,IAAM,CACXN,GAAA,EAELO,EAAe,IAAM,CACzBb,EAAK,aAAa,CAAA,EAEdc,EAAW,IAAM,CACff,EAAA,MAAQ,CAACZ,EAAK,aAAA,EAEhBsB,EAAW,IAAM,CACjBtB,GACFA,EAAK,QAAQ,EAEfA,EAAO4B,EAAMxB,EAAS,MAAQc,EAAY,KAAK,EAC1ClB,EAAA,GAAG,SAAU2B,CAAQ,CAAA,EAM5B,OAAAE,EAAU,IAAM,CACLP,GAAA,CACV;;;;;;;;;;;;;;;;;;;;;"}