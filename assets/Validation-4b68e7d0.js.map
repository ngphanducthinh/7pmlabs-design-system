{"version":3,"file":"Validation-4b68e7d0.js","sources":["../../src/composables/Validation.ts"],"sourcesContent":["import { inject, onBeforeUnmount, provide, ref, type Ref } from 'vue';\nimport { PIKey } from '@/constants/Common';\n\n/**\n * Types\n */\n// eslint-disable-next-line no-unused-vars\nexport type ValidationRuleFunction = (val: any) => boolean;\nexport type ValidationErrorMessageFunction = () => string;\nexport interface ValidationRule {\n  validateRule: ValidationRuleFunction;\n  errorMessage: ValidationErrorMessageFunction;\n}\nexport interface ValidationResult {\n  validate: () => void;\n  fieldValue: Ref<any>;\n  valid: boolean;\n  errorMessage: ValidationErrorMessageFunction;\n}\n\n/**\n * ValidationForm\n * @returns\n */\nexport function useValidationForm() {\n  let validationForm = inject(PIKey.FormValidation, undefined);\n  if (!validationForm) {\n    validationForm = {};\n    provide(PIKey.FormValidation, validationForm);\n  }\n\n  const validateAll = (): boolean => {\n    if (validationForm) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const vList = Object.entries(validationForm).map(([key, value]) => {\n        value.value.validate();\n        return value.value.valid;\n      });\n      return vList.every((v) => v);\n    }\n    return false;\n  };\n  const resetAll = () => {\n    if (validationForm) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      Object.entries(validationForm).forEach(([key, value]) => {\n        value.value.valid = true;\n        value.value.errorMessage = () => '';\n      });\n    }\n  };\n\n  return {\n    validationForm,\n    validateAll,\n    resetAll,\n  };\n}\n\n/**\n * Validation Field\n * @param key\n * @param fieldValue\n * @param validationRules\n * @returns\n */\nexport function useValidationField(\n  key: string,\n  fieldValue: Ref<any>,\n  validationRules: ValidationRule[] | undefined,\n) {\n  const validationResult = ref<ValidationResult>({\n    validate: () => {},\n    fieldValue,\n    valid: true,\n    errorMessage: () => '',\n  });\n\n  const formValidations = inject(PIKey.FormValidation, undefined);\n  if (formValidations) {\n    formValidations[key] = validationResult;\n  }\n\n  onBeforeUnmount(() => {\n    if (formValidations) {\n      delete formValidations[key];\n    }\n  });\n\n  /**\n   * Validate field value by a list of rules\n   * @returns\n   */\n  const validate = () => {\n    if (!validationRules) {\n      return;\n    }\n\n    validationResult.value.valid = true;\n    validationResult.value.errorMessage = () => '';\n\n    for (let i = 0; i < validationRules.length; i++) {\n      const result = validationRules[i].validateRule(fieldValue.value);\n\n      if (!result) {\n        validationResult.value.valid = false;\n        validationResult.value.errorMessage = validationRules[i].errorMessage;\n        return;\n      }\n    }\n  };\n\n  validationResult.value.validate = validate;\n\n  return {\n    validate,\n    validationResult,\n  };\n}\n"],"names":["useValidationForm","validationForm","inject","PIKey","provide","key","value","v","useValidationField","fieldValue","validationRules","validationResult","ref","formValidations","onBeforeUnmount","validate","i"],"mappings":"gHAwBO,SAASA,GAAoB,CAClC,IAAIC,EAAiBC,EAAOC,EAAM,eAAgB,MAAS,EAC3D,OAAKF,IACHA,EAAiB,CAAA,EACTG,EAAAD,EAAM,eAAgBF,CAAc,GAwBvC,CACL,eAAAA,EACA,YAvBkB,IACdA,EAEY,OAAO,QAAQA,CAAc,EAAE,IAAI,CAAC,CAACI,EAAKC,CAAK,KAC3DA,EAAM,MAAM,WACLA,EAAM,MAAM,MACpB,EACY,MAAOC,GAAMA,CAAC,EAEtB,GAeP,SAbe,IAAM,CACjBN,GAEK,OAAA,QAAQA,CAAc,EAAE,QAAQ,CAAC,CAACI,EAAKC,CAAK,IAAM,CACvDA,EAAM,MAAM,MAAQ,GACdA,EAAA,MAAM,aAAe,IAAM,EAAA,CAClC,CACH,CAMA,CAEJ,CASgB,SAAAE,EACdH,EACAI,EACAC,EACA,CACA,MAAMC,EAAmBC,EAAsB,CAC7C,SAAU,IAAM,CAAC,EACjB,WAAAH,EACA,MAAO,GACP,aAAc,IAAM,EAAA,CACrB,EAEKI,EAAkBX,EAAOC,EAAM,eAAgB,MAAS,EAC1DU,IACFA,EAAgBR,CAAG,EAAIM,GAGzBG,EAAgB,IAAM,CAChBD,GACF,OAAOA,EAAgBR,CAAG,CAC5B,CACD,EAMD,MAAMU,EAAW,IAAM,CACrB,GAAKL,EAIL,CAAAC,EAAiB,MAAM,MAAQ,GACdA,EAAA,MAAM,aAAe,IAAM,GAE5C,QAASK,EAAI,EAAGA,EAAIN,EAAgB,OAAQM,IAG1C,GAAI,CAFWN,EAAgBM,CAAC,EAAE,aAAaP,EAAW,KAAK,EAElD,CACXE,EAAiB,MAAM,MAAQ,GAC/BA,EAAiB,MAAM,aAAeD,EAAgBM,CAAC,EAAE,aACzD,MACF,EACF,EAGF,OAAAL,EAAiB,MAAM,SAAWI,EAE3B,CACL,SAAAA,EACA,iBAAAJ,CAAA,CAEJ"}