{"version":3,"file":"BTabs.stories-7dc8400b.js","sources":["../../src/components/BTabs/BTab.vue","../../src/components/BTabs/BTabs.vue"],"sourcesContent":["<script lang=\"ts\" setup></script>\n\n<template>\n  <div class=\"tab\">\n    <slot></slot>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.tab {\n  display: none;\n}\n.tab.active {\n  display: block;\n}\n</style>\n","<script lang=\"ts\" setup>\nimport type { BTabsHeader } from '@/types/components/BTabs';\nimport { v4 as uuid } from 'uuid';\nimport { computed, nextTick, onMounted, ref, watch } from 'vue';\n\n/**\n * Props\n */\nexport interface BTabsProps {\n  /**\n   * Array of header objects.\n   */\n  headers: BTabsHeader[];\n  /**\n   * Index of tab.\n   */\n  modelValue?: number;\n  /**\n   * CSS of header.\n   */\n  headerCssClass?: string;\n}\nconst props = withDefaults(defineProps<BTabsProps>(), {\n  modelValue: undefined,\n  headerCssClass: '',\n});\n\n/**\n * Events\n */\nconst emit = defineEmits(['update:modelValue']);\n\nconst tabContainer = ref<HTMLElement | null>(null);\nconst tabHeaders = ref<HTMLElement[] | null>(null);\nconst tabs = ref<Element[] | null>(null);\nconst activeTabIndex = ref(0);\n\n/**\n * Data\n */\nconst mValue = ref(0);\nconst value = computed({\n  get() {\n    return props.modelValue !== undefined ? props.modelValue : mValue.value;\n  },\n  set(val) {\n    if (props.modelValue !== undefined) {\n      emit('update:modelValue', val);\n    } else {\n      mValue.value = val;\n    }\n  },\n});\nconst tabBodyId = computed(() => `id-${uuid()}`);\n\n/**\n * Watch\n */\nwatch(value, (val) => {\n  selectTab(val);\n});\nwatch(\n  () => props.headers,\n  () => {\n    nextTick(() => {\n      initTabs();\n    });\n  },\n);\n\n/**\n * Methods\n */\nconst onClickTabHeader = (index: number) => {\n  value.value = index;\n};\nconst selectTab = (index: number) => {\n  if (tabs.value && tabHeaders.value) {\n    // Set activeTabIndex item to the index of the element clicked\n    activeTabIndex.value = index;\n    // Remove any active classes\n    [...tabs.value, ...tabHeaders.value].forEach((t) => {\n      t.classList.remove('active');\n    });\n    // Add active classes where appropriate, to the active element\n    if (\n      tabs.value[activeTabIndex.value] &&\n      tabHeaders.value[activeTabIndex.value]\n    ) {\n      tabs.value[activeTabIndex.value].classList.add('active');\n      tabHeaders.value[activeTabIndex.value].classList.add('active');\n    } else {\n      // Nearest element if desired index is not found\n      const nearestIndex = activeTabIndex.value - 1;\n      if (nearestIndex >= 0) {\n        tabs.value[nearestIndex].classList.add('active');\n        tabHeaders.value[nearestIndex].classList.add('active');\n      }\n    }\n  }\n};\nconst initTabs = () => {\n  if (tabContainer.value) {\n    // Selects all elements with the class '.tab', which are direct children of element with the id 'tabBodyId'\n    tabs.value = [\n      ...(tabContainer.value.querySelectorAll(\n        `#${tabBodyId.value} > .tab`,\n      ) as any),\n    ];\n    tabs.value.forEach((tab) => {\n      if (tab.classList.contains('active')) {\n        activeTabIndex.value = tabs.value!.indexOf(tab);\n      }\n    });\n    selectTab(activeTabIndex.value);\n  }\n};\n\n/**\n * Lifecycle Hooks\n */\nonMounted(() => {\n  initTabs();\n});\n</script>\n\n<template>\n  <div ref=\"tabContainer\">\n    <slot name=\"headers-prepend\"></slot>\n    <ul\n      class=\"ds-flex ds-flex-wrap ds-overflow-hidden ds-rounded-lg ds-border ds-border-gray-100 ds-bg-gray-100\"\n    >\n      <li\n        v-for=\"(header, index) in headers\"\n        :key=\"index\"\n        ref=\"tabHeaders\"\n        :class=\"[\n          headerCssClass,\n          header.disabled ? 'ds-pointer-events-none ds-text-black/40' : '',\n        ]\"\n        class=\"tab-header ds-min-w-[5rem] ds-flex-1 ds-cursor-pointer ds-rounded-lg ds-p-2 ds-text-center ds-text-sm ds-font-medium ds-capitalize hover:ds-bg-slate-50 hover:ds-text-primary-t\"\n        @click=\"onClickTabHeader(index)\"\n      >\n        {{ header.text }}\n      </li>\n    </ul>\n    <slot name=\"headers-append\"></slot>\n\n    <div :id=\"tabBodyId\" class=\"ds-w-full\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.tab-header.active {\n  background-color: theme('colors.white');\n  color: theme('colors.primary-t');\n}\n</style>\n"],"names":["_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_hoisted_1","tabContainer","ref","tabHeaders","tabs","activeTabIndex","mValue","value","computed","props","val","emit","tabBodyId","uuid","watch","selectTab","nextTick","initTabs","onClickTabHeader","index","t","nearestIndex","tab","onMounted"],"mappings":"oQAGE,SAAAA,EAAAC,EAAAC,EAAA,QACeC,EAAA,EAAAC,EAAA,MAAAC,EAAA,ojBC4BXC,EAAeC,EAAwB,IAAI,EAC3CC,EAAaD,EAA0B,IAAI,EAC3CE,EAAOF,EAAsB,IAAI,EACjCG,EAAiBH,EAAI,CAAC,EAKtBI,EAASJ,EAAI,CAAC,EACdK,EAAQC,EAAS,CACrB,KAAM,CACJ,OAAOC,EAAM,aAAe,OAAYA,EAAM,WAAaH,EAAO,KACpE,EACA,IAAII,EAAK,CACHD,EAAM,aAAe,OACvBE,EAAK,oBAAqBD,CAAG,EAE7BJ,EAAO,MAAQI,CAEnB,CAAA,CACD,EACKE,EAAYJ,EAAS,IAAM,MAAMK,EAAA,CAAM,EAAE,EAKzCC,EAAAP,EAAQG,GAAQ,CACpBK,EAAUL,CAAG,CAAA,CACd,EACDI,EACE,IAAML,EAAM,QACZ,IAAM,CACJO,EAAS,IAAM,CACJC,GAAA,CACV,CACH,CAAA,EAMI,MAAAC,EAAoBC,GAAkB,CAC1CZ,EAAM,MAAQY,CAAA,EAEVJ,EAAaI,GAAkB,CAC/B,GAAAf,EAAK,OAASD,EAAW,MASzB,GAPFE,EAAe,MAAQc,EAEtB,CAAA,GAAGf,EAAK,MAAO,GAAGD,EAAW,KAAK,EAAE,QAASiB,GAAM,CAChDA,EAAA,UAAU,OAAO,QAAQ,CAAA,CAC5B,EAGChB,EAAK,MAAMC,EAAe,KAAK,GAC/BF,EAAW,MAAME,EAAe,KAAK,EAErCD,EAAK,MAAMC,EAAe,KAAK,EAAE,UAAU,IAAI,QAAQ,EACvDF,EAAW,MAAME,EAAe,KAAK,EAAE,UAAU,IAAI,QAAQ,MACxD,CAEC,MAAAgB,EAAehB,EAAe,MAAQ,EACxCgB,GAAgB,IAClBjB,EAAK,MAAMiB,CAAY,EAAE,UAAU,IAAI,QAAQ,EAC/ClB,EAAW,MAAMkB,CAAY,EAAE,UAAU,IAAI,QAAQ,EAEzD,CACF,EAEIJ,EAAW,IAAM,CACjBhB,EAAa,QAEfG,EAAK,MAAQ,CACX,GAAIH,EAAa,MAAM,iBACrB,IAAIW,EAAU,KAAK,SACrB,CAAA,EAEGR,EAAA,MAAM,QAASkB,GAAQ,CACtBA,EAAI,UAAU,SAAS,QAAQ,IACjCjB,EAAe,MAAQD,EAAK,MAAO,QAAQkB,CAAG,EAChD,CACD,EACDP,EAAUV,EAAe,KAAK,EAChC,EAMF,OAAAkB,EAAU,IAAM,CACLN,GAAA,CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}