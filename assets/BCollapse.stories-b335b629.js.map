{"version":3,"file":"BCollapse.stories-b335b629.js","sources":["../../src/components/BCollapse.vue"],"sourcesContent":["<script lang=\"ts\" setup>\n// https://markus.oberlehner.net/blog/transition-to-height-auto-with-vue/\nimport { computed } from 'vue';\n\nexport interface Props {\n  modelValue: boolean;\n}\nconst props = defineProps<Props>();\n\n/**\n * Events\n */\nconst emit = defineEmits(['update:modelValue']);\n\n/**\n * Computed\n */\nconst value = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(val: boolean) {\n    emit('update:modelValue', val);\n  },\n});\n\n/**\n * Methods\n */\nconst enter = (el: Element) => {\n  const element = el as HTMLElement;\n  const { width } = getComputedStyle(element);\n\n  element.style.width = width;\n  element.style.position = 'absolute';\n  element.style.visibility = 'hidden';\n  element.style.height = 'auto';\n\n  const { height } = getComputedStyle(element);\n\n  element.style.width = '';\n  element.style.position = '';\n  element.style.visibility = '';\n  element.style.height = '0px';\n\n  // Force repaint to make sure the animation is triggered correctly.\n  // eslint-disable-next-line no-unused-expressions\n  getComputedStyle(element).height;\n\n  // Trigger the animation.\n  // We use `requestAnimationFrame` because we need to make sure the browser has finished painting\n  // after setting the `height` to`0` in the line above.\n  requestAnimationFrame(() => {\n    element.style.height = height;\n  });\n};\nconst afterEnter = (el: Element) => {\n  const element = el as HTMLElement;\n  element.style.height = 'auto';\n};\nconst leave = (el: Element) => {\n  const element = el as HTMLElement;\n  const { height } = getComputedStyle(element);\n\n  element.style.height = height;\n\n  // Force repaint to make sure the animation is triggered correctly.\n  // eslint-disable-next-line no-unused-expressions\n  getComputedStyle(element).height;\n\n  requestAnimationFrame(() => {\n    element.style.height = '0px';\n  });\n};\n</script>\n\n<template>\n  <transition\n    name=\"expand\"\n    @enter=\"enter\"\n    @leave=\"leave\"\n    @after-enter=\"afterEnter\"\n  >\n    <div v-show=\"value\">\n      <slot></slot>\n    </div>\n  </transition>\n</template>\n\n<style lang=\"scss\" scoped>\n// Hardware acceleration\n* {\n  will-change: height;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n}\n</style>\n<style lang=\"scss\">\n.expand-enter-active,\n.expand-leave-active {\n  transition: height 0.3s ease-in-out;\n  overflow: hidden;\n}\n\n.expand-enter-from,\n.expand-leave-to {\n  height: 0;\n}\n</style>\n"],"names":["value","computed","props","val","emit","enter","el","element","width","height","afterEnter","leave"],"mappings":"kXAiBMA,EAAQC,EAAS,CACrB,KAAM,CACJ,OAAOC,EAAM,UACf,EACA,IAAIC,EAAc,CAChBC,EAAK,oBAAqBD,CAAG,CAC/B,CAAA,CACD,EAKKE,EAASC,GAAgB,CAC7B,MAAMC,EAAUD,EACV,CAAE,MAAAE,CAAA,EAAU,iBAAiBD,CAAO,EAE1CA,EAAQ,MAAM,MAAQC,EACtBD,EAAQ,MAAM,SAAW,WACzBA,EAAQ,MAAM,WAAa,SAC3BA,EAAQ,MAAM,OAAS,OAEvB,KAAM,CAAE,OAAAE,CAAA,EAAW,iBAAiBF,CAAO,EAE3CA,EAAQ,MAAM,MAAQ,GACtBA,EAAQ,MAAM,SAAW,GACzBA,EAAQ,MAAM,WAAa,GAC3BA,EAAQ,MAAM,OAAS,MAIvB,iBAAiBA,CAAO,EAAE,OAK1B,sBAAsB,IAAM,CAC1BA,EAAQ,MAAM,OAASE,CAAA,CACxB,CAAA,EAEGC,EAAcJ,GAAgB,CAClC,MAAMC,EAAUD,EAChBC,EAAQ,MAAM,OAAS,MAAA,EAEnBI,EAASL,GAAgB,CAC7B,MAAMC,EAAUD,EACV,CAAE,OAAAG,CAAA,EAAW,iBAAiBF,CAAO,EAE3CA,EAAQ,MAAM,OAASE,EAIvB,iBAAiBF,CAAO,EAAE,OAE1B,sBAAsB,IAAM,CAC1BA,EAAQ,MAAM,OAAS,KAAA,CACxB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}